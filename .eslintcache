[{"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\index.js":"1","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\App.js":"2","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultController.jsx":"3","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\DoctorResult.jsx":"4","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultList.jsx":"5","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultDetails.jsx":"6","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\PatientResult.jsx":"7","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Login.js":"8","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\users.js":"9","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\apiHelper.js":"10","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\errors.js":"11","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\authHelper.js":"12","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\constants.js":"13","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\auth.js":"14","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\getCurrentTime.js":"15","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\store.js":"16","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\AppRouter.js":"17","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\rootReducer.js":"18","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\SystemAdmin.js":"19","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\Main.js":"20","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Game.js":"21","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\util.js":"22","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Control.js":"23","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Score.js":"24","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\lines\\line.js":"25","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\constants.js":"26","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Dot.js":"27","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\diagnosis.js":"28","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\result.js":"29","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\ViewDiagnosisDoc.js":"30","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\editDiagnosis.js":"31","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\SubmitDiagnosis.js":"32","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Logout.js":"33","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\Graph.js":"34"},{"size":155,"mtime":1616342786030,"results":"35","hashOfConfig":"36"},{"size":318,"mtime":1616342894240,"results":"37","hashOfConfig":"36"},{"size":1879,"mtime":1616343929969,"results":"38","hashOfConfig":"36"},{"size":1414,"mtime":1616343948224,"results":"39","hashOfConfig":"36"},{"size":1566,"mtime":1616344003109,"results":"40","hashOfConfig":"36"},{"size":989,"mtime":1616347863585,"results":"41","hashOfConfig":"36"},{"size":1578,"mtime":1616343967971,"results":"42","hashOfConfig":"36"},{"size":4191,"mtime":1616338990939,"results":"43","hashOfConfig":"36"},{"size":2998,"mtime":1616233563718,"results":"44","hashOfConfig":"36"},{"size":3306,"mtime":1616233563022,"results":"45","hashOfConfig":"36"},{"size":1432,"mtime":1616233563460,"results":"46","hashOfConfig":"36"},{"size":464,"mtime":1616233563271,"results":"47","hashOfConfig":"36"},{"size":299,"mtime":1616344706435,"results":"48","hashOfConfig":"36"},{"size":5194,"mtime":1616344126874,"results":"49","hashOfConfig":"36"},{"size":275,"mtime":1616233563952,"results":"50","hashOfConfig":"36"},{"size":338,"mtime":1616233562894,"results":"51","hashOfConfig":"36"},{"size":3204,"mtime":1616347356269,"results":"52","hashOfConfig":"36"},{"size":386,"mtime":1616345839915,"results":"53","hashOfConfig":"36"},{"size":6295,"mtime":1616233555077,"results":"54","hashOfConfig":"36"},{"size":9749,"mtime":1616345740473,"results":"55","hashOfConfig":"36"},{"size":5612,"mtime":1616344958323,"results":"56","hashOfConfig":"36"},{"size":501,"mtime":1616341735275,"results":"57","hashOfConfig":"36"},{"size":685,"mtime":1616341734952,"results":"58","hashOfConfig":"36"},{"size":204,"mtime":1616341735196,"results":"59","hashOfConfig":"36"},{"size":2916,"mtime":1616341735442,"results":"60","hashOfConfig":"36"},{"size":143,"mtime":1616341734870,"results":"61","hashOfConfig":"36"},{"size":448,"mtime":1616341784514,"results":"62","hashOfConfig":"36"},{"size":4106,"mtime":1616347318154,"results":"63","hashOfConfig":"36"},{"size":3654,"mtime":1616347311824,"results":"64","hashOfConfig":"36"},{"size":12062,"mtime":1616346862259,"results":"65","hashOfConfig":"36"},{"size":3502,"mtime":1616346580129,"results":"66","hashOfConfig":"36"},{"size":4021,"mtime":1616346562536,"results":"67","hashOfConfig":"36"},{"size":1357,"mtime":1616339074508,"results":"68","hashOfConfig":"36"},{"size":614,"mtime":1616346469583,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1e8ofe4",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"72"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"72"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"118","usedDeprecatedRules":"72"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"137","messages":"138","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"72"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"72"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"72"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\index.js",[],["150","151"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\App.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultController.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\DoctorResult.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultList.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultDetails.jsx",["152"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\PatientResult.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Login.js",["153","154","155","156","157","158"],"import React, { Component } from \"react\";\nimport { Button, CssBaseline, TextField, Container, Typography } from \"@material-ui/core\";\nimport {\n  fetchMe,\n  selectUser,\n  selectUserLoading,\n  selectUserFailed,\n  authenticateLogin\n} from \"../redux/ducks/auth\";\nimport { Redirect } from \"react-router-dom\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      role:\"\"\n    };\n\n  }\n  handleChange = (e) => {\n    this.setState({\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // calcRedirect = (e) => {\n  //   console.log(JSON.stringify(e));\n  //   if (e.role === \"ROLE_ADMIN\") {\n  //     this.props.history.push('/systemadmin');\n  //   } else {\n  //      this.props.history.push('/main');\n  //   }\n  // }\n\n  handleSubmit = (e) => {\n    e.preventDefault();\n    try {\n      this.setState({ username: \"\", password: \"\" });\n      const { username, password } = this.state;\n      this.props.login(this.state);     \n      this.props.history.push('/main');\n    } catch (e) {\n      window.alert('Invalid Credentials!')\n      alert(e.message);\n    }\n  };\n\n  render() {\n\n    return (\n      <div className=\"main\" data-test=\"loginContainer\">\n        <Container component=\"main\" maxWidth=\"xs\" align=\"center\" style={{ marginTop: 150 }} >\n          <CssBaseline />\n          <div className=\"login-form\">\n            <Typography variant=\"h3\" style={{ marginBottom: 20 }}>Login</Typography>\n\n            <form\n              noValidate\n              onSubmit={this.handleSubmit}>\n              {this.props.fetchMeSuccessAction ? \"Logged in\" : \"\"}\n              {this.props.fetchMeRequestAction && !this.props.fetchMeSuccessAction ? \"Logging..\" : \"\"}\n              <TextField\n                data-testid=\"usernameField\"\n                onChange={this.handleChange}\n                value={this.state.username}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"Username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n              //style={{height:25, width:200, marginLeft:55}}\n              />\n\n              <TextField\n                data-testid=\"passwordField\"\n                onChange={this.handleChange}\n                value={this.state.password}\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n              //style={{height:25, width:200, marginLeft:55}}\n              />\n              <div className=\"form-group\">\n                <Button\n                  data-testid=\"loginButton\"\n                  type=\"submit\"\n                  fullWidth\n                  variant=\"contained\"\n                  color=\"secondary\"\n                  style={{ marginTop: 20 }}\n                >Login</Button>\n              </div>\n            </form>\n          </div>\n        </Container>\n      </div>\n    );\n  }\n\n}\nLoginPage.propTypes = {\n  /** An action creator for authenticating login */\n  authenticateLogin: PropTypes.func.isRequired,\n  fetchMeSuccessAction: PropTypes.func.isRequired,\n  fetchMeRequestAction: PropTypes.func.isRequired,\n  userFailed: PropTypes.bool,\n  user: PropTypes.object.isRequired,\n  fetchMe: PropTypes.func.isRequired\n  /** An object used for styling */\n};\n\nconst dispatch = {\n  authenticateLogin,\n  fetchMe\n};\n\n\n\nconst mapStateToProps = state => {\n  return {\n    fetchMeSuccessAction: state.fetchMeSuccessAction,\n    fetchMeRequestAction: state.fetchMeRequestAction,\n\n    user: selectUser(state)\n  };\n};\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    login: data => dispatch(authenticateLogin(data))\n  };\n};\n// const connectedLoginPage = connect(mapStateToProps)(LoginPage);\n// export { connectedLoginPage as LoginPage }; \nexport default connect(mapStateToProps,\n  mapDispatchToProps)(LoginPage);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\users.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\apiHelper.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\errors.js",["159"],"// ACTION TYPES\nconst ERROR_DISPLAY = 'ERROR_DISPLAY';\nconst ERROR_CLOSE = 'ERROR_CLOSE';\n\n// REDUCER\nconst initialState = {\n  errors: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ERROR_DISPLAY:\n      return {\n        ...state,\n        errors: [...state.errors, action.payload],\n      }\n\n    case ERROR_CLOSE:\n      return {\n        ...state,\n        errors: state.errors.map(error => {\n          if (error.id === action.payload)\n            return {\n              ...error,\n              isVisible: false,\n            };\n          else\n            return error;\n        }),\n      }\n\n    default:\n      return state;\n  }\n};\n\n// ACTION CREATORS\nfunction displayErrorAction(error) {\n  // Generate unique ID\n  return {\n    type: ERROR_DISPLAY,\n    payload: error,\n  }\n}\n\nfunction closeErrorAction(id) {\n  return {\n    type: ERROR_CLOSE,\n    payload: id,\n  }\n}\n\n// OPERATIONS\nexport const displayError = errorMessage => dispatch => {\n  const uid = Date.now().toString(36) + Math.random().toString(36).substr(2);\n\n  dispatch(displayErrorAction({\n    id: uid,\n    message: errorMessage,\n    isVisible: true,\n  }));\n\n  // Dismiss error alert after 3 seconds\n  setTimeout(() => {\n    dispatch(closeErrorAction(uid));\n  }, 3000);\n};\n\nexport const closeError = id => dispatch => dispatch(closeErrorAction(id));\n\n// SELECTORS\nexport const selectErrors = state => state.errorsReducer.errors;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\authHelper.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\constants.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\auth.js",["160"],"import { API_URL } from \"../../utils/constants\";\nimport axios from \"axios\";\nimport { displayError } from \"./errors\";\nimport { getCurrentTime } from \"../../utils/getCurrentTime\";\nimport { getTokenConfig } from \"./authHelper\";\n\n// ACTION TYPES\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_ME_REQUEST = \"FETCH_ME_REQUEST\";\nexport const FETCH_ME_SUCCESS = \"FETCH_ME_SUCCESS\";\nexport const FETCH_ME_FAILURE = \"FETCH_ME_FAILURE\";\n\n// REDUCER\nconst initialState = {\n  userLoading: true,\n  userFailed: null,\n  user: {},\n  access_token: localStorage.getItem(\"access_token\"),\n  refresh_token: localStorage.getItem(\"refresh_token\"),\n  expires_in: localStorage.getItem(\"expires_in\"),\n  time_token_acquired: getCurrentTime()\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGIN:\n      // Store refresh and access token in localStorage\n      const { access_token, refresh_token, expires_in } = action.payload;\n\n      const currentTime = getCurrentTime();\n      localStorage.setItem(\"access_token\", access_token);\n      localStorage.setItem(\"refresh_token\", refresh_token);\n      localStorage.setItem(\"expires_in\", expires_in);\n      localStorage.setItem(\"time_token_acquired\", currentTime);\n   \n\n      return {\n        ...state,\n        access_token: access_token,\n        refresh_token: refresh_token,\n        expires_in: expires_in,\n        time_token_acquired: currentTime\n      };\n\n    case LOGOUT:\n      // Remove refresh and access token in localStorage\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      localStorage.removeItem(\"expires_in\");\n      localStorage.removeItem(\"current_user\");\n      localStorage.removeItem(\"time_token_acquired\");\n\n      return {\n        ...state,\n        user: {},\n        access_token: \"\",\n        refresh_token: \"\",\n        expires_in: 0,\n        time_token_acquired: \"\"\n      };\n\n    case FETCH_ME_REQUEST:\n      return {\n        ...state,\n        userLoading: true,\n        userFailed: false\n      };\n\n    case FETCH_ME_SUCCESS:\n      return {\n        ...state,\n        userLoading: false,\n        user: action.payload\n      };\n\n    case FETCH_ME_FAILURE:\n      return {\n        ...state,\n        userLoading: false,\n        userFailed: true\n      };\n\n    default:\n      return state;\n  }\n}\n\n// ACTION CREATORS\nexport function loginAction(payload) {\n  return {\n    type: LOGIN,\n    payload: payload\n  };\n}\n\nexport function logoutAction() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function fetchMeRequestAction() {\n  return {\n    type: FETCH_ME_REQUEST\n  };\n}\n\nexport function fetchMeSuccessAction(userInfo) {\n  return {\n    type: FETCH_ME_SUCCESS,\n    payload: userInfo\n  };\n}\n\nexport function fetchMeFailureAction() {\n  return {\n    type: FETCH_ME_FAILURE\n  };\n}\n\n// OPERATIONS\nexport const authenticateLogin = userData => dispatch => {\n  var formdata = new FormData();\n  formdata.append(\"username\", userData.username);\n  formdata.append(\"password\", userData.password);\n  formdata.append(\"grant_type\", \"password\");\n\n  axios\n    .post(`${API_URL}/oauth/token`, formdata, {\n      headers: {\n        Authorization: `Basic ${btoa(\"my-client:my-secret\")}`\n      }\n    })\n    .then((res) => {\n      fetchMe(res.data.access_token)(dispatch);\n      dispatch(loginAction(res.data));\n    })\n    .catch((err) => {\n      displayError(\"Unable to login\")(dispatch);\n      dispatch(fetchMeFailureAction());\n    });\n};\n\nexport const refreshTokenLogin = () => (dispatch, getState) => {\n  var formdata = new FormData();\n  formdata.append(\"refresh_token\", getState().authReducer.refresh_token);\n  formdata.append(\"grant_type\", \"refresh_token\");\n\n  axios\n    .post(`${API_URL}/oauth/token`, formdata, {\n      headers: {\n        Authorization: `Basic ${btoa(\"my-client:my-secret\")}`\n      }\n    })\n    .then((res) => {\n      fetchMe(res.data.access_token)(dispatch);\n      dispatch(loginAction(res.data));\n    })\n    .catch((err) => {\n      displayError(\"Unable to login\")(dispatch);\n      dispatch(fetchMeFailureAction());\n    });\n};\n\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .delete(`${API_URL}/oauth/revoke`, getTokenConfig(getState))\n    .then(() => {\n      dispatch(logoutAction());\n    })\n    .catch((err) => {\n      displayError(\"Unable to logout\")(dispatch);\n    });\n};\n\nexport const fetchMe = (access_token) => (dispatch) => {\n  dispatch(fetchMeRequestAction());\n\n  axios\n    .post(\n      `${API_URL}/users/me/`,\n      {},\n      {\n        headers: {\n          Authorization: `bearer ${access_token}`\n        }\n      }\n    )\n    .then((res) => {\n      dispatch(fetchMeSuccessAction(res.data));\n    })\n    .catch((err) => {\n      displayError(\"Unable to fetch current user information\")(dispatch);\n      dispatch(fetchMeFailureAction());\n    });\n};\n\n// SELECTORS\nexport const selectUserLoading = (state) =>\n  state.authReducer.userLoading === true;\nexport const selectUserFailed = (state) =>\n  state.authReducer.userLoading === false &&\n  state.authReducer.userFailed === true;\nexport const selectUser = (state) => state.authReducer.user;\n\nexport const selectRefreshToken = (state) => state.authReducer.refresh_token;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\getCurrentTime.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\store.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\AppRouter.js",["161"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\rootReducer.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\SystemAdmin.js",["162","163"],"import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport MaterialTable from 'material-table';\nimport { deleteUser, listUsers, createUser, updateUser } from \"../redux/ducks/users\";\nimport {\n  selectUsersLoading,\n  selectUsersFailed,\n  selectUsers\n} from \"../redux/ducks/users\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Loader from 'react-loader-spinner';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { AirlineSeatLegroomExtra } from \"@material-ui/icons\";\n\nclass SystemAdmin extends Component {\n\n  componentDidMount() {\n    this.props.listUsers();\n  }\n\n\n  render() {\n    const {\n      usersLoading,\n      users,\n      createUser,\n      updateUser,\n      deleteUser\n    } = this.props;\n\n\n\n\n    const tableIcons = {\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    if (usersLoading)\n      return <Loader />;\n\n    return (\n      <div className=\"container\" data-test=\"adminTable\" style={{ height: 400, width: '100%' }}>\n        <MaterialTable\n          title=\"Users\"\n          icons={tableIcons}\n          font=\"\"\n          columns={[\n\n            {\n              title: 'Email',\n              field: 'email',\n            }, \n            {\n              title: 'Name',\n              field: 'name',\n              \n            },\n            {\n              title: 'Password',\n              field: 'pass',\n\n            },\n            {\n              title: 'Role',\n              field: 'role',\n              lookup: {\n                ROLE_DOCTOR: \"ROLE_DOCTOR\",\n                ROLE_PATIENT: \"ROLE_PATIENT\",\n                ROLE_ADMIN: \"ROLE_ADMIN\",\n              },\n            },\n           {\n              title: 'Date of Birth',\n              field: 'dob',\n              type: \"date\",\n            },\n            {\n              title: 'Gender',\n              field: 'gender',\n              lookup: {\n                FEMALE: \"FEMALE\",\n                MALE: \"MALE\",\n              },\n            },\n          ]}\n          data={users}\n          options={{\n            \n            cellStyle: {\n              fontFamily: \"Helvetica\",\n              fontSize: 15,\n            },\n            headerStyle: {\n              backgroundColor: '#323ea8',\n              color: '#FFF',\n              fontSize: 17,\n            }}}\n          editable={{\n            onRowAdd: newData =>\n              new Promise((resolve, reject) => {\n                createUser(newData)\n                  .then(this.setState(users, () => resolve()))\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                updateUser(newData, oldData)\n                  .then(this.setState(users, () => resolve()))\n              }),\n            onRowDelete: oldData =>\n              new Promise((resolve, reject) => {\n                deleteUser(oldData)\n                  .then(this.setState(users, () => resolve()))\n              }),\n          }}\n        />\n\n      </div>\n    )\n\n  }\n}\n\nSystemAdmin.propTypes = {\n  /** A boolean to determine if the users are still being loaded by the `listUsers` action creator (true: still loading, false: fully loaded) */\n  usersLoading: PropTypes.bool.isRequired,\n  /** A boolean to determine if the users failed to be loaded by the `listUsers` action creator (true: still loading or failed to load, false: successful load) */\n  usersFailed: PropTypes.bool,\n  /** An array of users objects loaded by the `listUsers` action creator */\n  users: PropTypes.array.isRequired,\n  /** An action creator for loading accounts from the server*/\n  listUsers: PropTypes.func.isRequired,\n  /** An action creator for creating a user account */\n  createUser: PropTypes.func.isRequired,\n  /** An action creator for deleting a user account */\n  deleteUser: PropTypes.func.isRequired,\n  /** An action creator for updating a user account*/\n  updateUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  usersLoading: selectUsersLoading(state),\n  usersFailed: selectUsersFailed(state),\n  users: selectUsers(state)\n});\n\n\nconst dispatchers = {\n  createUser,\n  updateUser,\n  deleteUser,\n  listUsers,\n};\n\nexport default connect(mapStateToProps, dispatchers)(SystemAdmin);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\Main.js",["164","165"],"import Link from '@material-ui/core/Link';\nimport React, { Component } from 'react';\nimport Game from './game/Game';\nimport SystemAdmin from './systemadmin/SystemAdmin.js';\nimport ResultController from './results/ResultController.jsx';\nimport { BrowserRouter as Router, Route, Switch, Link as RouterLink } from \"react-router-dom\";\nimport { Button, CssBaseline, AppBar, Toolbar, Grid, CardContent, CardActions, Card, Container, Typography } from \"@material-ui/core\";\nimport { withStyles } from '@material-ui/styles';\nimport PropTypes from \"prop-types\";\nimport {\n  fetchMe,\n  selectUser,\n  selectUserLoading,\n  selectUserFailed\n} from './redux/ducks/auth.js'\nimport { connect } from \"react-redux\";\n\nimport store from './redux/store.js'\n\n//../redux/ducks/diagnosis\nimport { Provider } from 'react-redux'\n// import { MuiThemeProvider } from '@material-ui/core/styles';\n// import { createMuiTheme } from '@material-ui/core/styles';\n//import './header.css';\n//import resultTest from './resultTest.js';\n// import ResultController from './results/ResultController.jsx';\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        QWERTY\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n\n\n\n\nclass Header extends Component {\n  // componentDidMount(){\n\n  //   this.props.fetchMe(localStorage.getItem('access_token'))\n  // }\n\n  // logout = () => {\n\n  //   localStorage.removeItem(\"access_token\");\n  //     localStorage.removeItem(\"refresh_token\");\n  //     localStorage.removeItem(\"expires_in\");\n  //     localStorage.removeItem(\"current_user\");\n  //     localStorage.removeItem(\"time_token_acquired\");\n  //     localStorage.removeItem(\"role\");\n  //   this.props.history.push(`/login`);\n  //   //  window.location.reload(false);\n\n  // }\n  render = () => {\n\n    if (!this.props.userLoading && !this.props.userFailed) {\n      const role = this.props.user.role\n      console.log(role)\n      localStorage.setItem(\"role\", role)\n    }\n\n\n\n    if (localStorage.getItem(\"role\") === \"ROLE_ADMIN\") {\n      return (\n        <Provider store={store}>\n\n          <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"relative\">\n              <Toolbar>\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" noWrap>\n                  TRAIL MAKING TEST\n                  </Typography>\n              </Toolbar>\n            </AppBar>\n            <main>\n              {/* Hero unit */}\n              <div >\n                <Container maxWidth=\"sm\">\n                  <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Trail Making Test\n                    </Typography>\n                  <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                    Trail Making Test is a simple neuropsychological test of cognitive processes, including attention, visual search and scanning, and psychomotor speed.\n                    </Typography>\n                </Container>\n              </div>\n              <Router>\n                <Container maxWidth=\"md\">\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={4}>\n\n                    <Grid item xs={12} sm={6} md={4}>\n                      <Card >\n                        <CardContent >\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            System Admin\n                              </Typography>\n                        </CardContent>\n                        <CardActions>\n                          <RouterLink to={`/systemadmin`}>\n                            <Button assize=\"small\" color=\"primary\">\n                              view\n                                </Button>\n                          </RouterLink>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n\n                  </Grid>\n                  <Button\n                  data-testid=\"loginButton\"\n                  type=\"submit\"\n                  fullWidth                  \n                  variant=\"contained\"\n                  color=\"secondary\"\n                href=\"/logout\"\n               style={{ marginLeft: 400,width:120, height:50, marginTop:30, marginBottom:30 }}\n                >Logout</Button>\n     \n                </Container>\n                <div>\n                  <Switch>                 \n                <Route path=\"/systemadmin\" component={SystemAdmin} />       \n                  </Switch>\n                </div>\n                {/* <AppRouter/> */}\n              </Router>\n            </main>\n            {/* Footer */}\n            <footer >\n              <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\" component=\"p\">\n                This is a school project for CZ3002.\n                </Typography>\n              <Copyright />\n              \n           \n           \n            </footer>\n            {/* End footer */}\n\n          </React.Fragment>\n\n        </Provider>\n\n      )\n\n    }\n\n    else if (localStorage.getItem(\"role\") === \"ROLE_DOCTOR\" || localStorage.getItem(\"role\") === \"ROLE_PATIENT\") {\n\n      let isPatient = localStorage.getItem(\"role\") === \"ROLE_PATIENT\";\n      return (\n        <Provider store={store}>\n\n          <React.Fragment>\n            <CssBaseline />\n            <AppBar position=\"relative\">\n              <Toolbar>\n                <Typography variant=\"h6\" color=\"inherit\" align=\"center\" noWrap>\n                  TRAIL MAKING TEST\n                        </Typography>\n              </Toolbar>\n            </AppBar>\n            <main>\n              {/* Hero unit */}\n              <div >\n                <Container maxWidth=\"sm\">\n                  <Typography component=\"h1\" variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                    Trail Making Test\n                          </Typography>\n                  <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" paragraph>\n                    Trail Making Test is a simple neuropsychological test of cognitive processes, including attention, visual search and scanning, and psychomotor speed.\n                          </Typography>\n                </Container>\n              </div>\n              <Router>\n                <Container maxWidth=\"md\">\n                  <Grid container direction=\"row\" justify=\"center\" alignItems=\"center\" spacing={4}>\n                    {isPatient ?\n                      <Grid item xs={12} sm={6} md={4}>\n                        <Card >\n                          <CardContent >\n                            <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                              Game\n                              </Typography>\n                          </CardContent>\n                          <CardActions>\n                            <RouterLink to={`/game`}>\n                              <Button assize=\"small\" color=\"primary\">\n                                Start\n                                </Button>\n                            </RouterLink>\n                          </CardActions>\n                        </Card>\n                      </Grid>\n                      : null}\n\n                    <Grid item xs={12} sm={6} md={4}>\n                      <Card >\n                        <CardContent >\n                          <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            Result\n                              </Typography>\n                        </CardContent>\n                        <CardActions>\n                          <RouterLink to={`/result`}>\n                            <Button assize=\"small\" color=\"primary\">\n                              view\n                                </Button>\n                          </RouterLink>\n                        </CardActions>\n                      </Card>\n                    </Grid>\n                  </Grid>\n                  <Button\n                  data-testid=\"loginButton\"\n                  type=\"submit\"\n                  fullWidth                  \n                  variant=\"contained\"\n                  color=\"secondary\"\n                href=\"/logout\"\n               style={{ marginLeft: 400,width:120, height:50, marginTop:30, marginBottom:30 }}\n                >Logout</Button>\n                </Container>\n                <div>\n                  <Switch>\n                        <Route path=\"/game\" component={Game} />\n                <Route path=\"/result\" component={ResultController} />\n                  </Switch>\n                </div>\n                {/* <AppRouter/> */}\n              </Router>\n            </main>\n            {/* Footer */}\n            <footer \n            >\n              <Typography variant=\"subtitle1\" align=\"center\" color=\"textSecondary\"  style={{ marginTop: 90 }} component=\"p\">\n                This is a school project for CZ3002.\n                      </Typography>\n              <Copyright />\n            </footer>\n            {/* End footer */}\n\n           \n\n\n          </React.Fragment>\n\n        </Provider>\n\n      )\n    }\n    else {\n\n      return (\n        <loader />\n      )\n    }\n\n\n  }\n}\n\n\n\n\nHeader.propTypes = {\n\n\n  userLoading: PropTypes.bool.isRequired,\n  userFailed: PropTypes.bool,\n  user: PropTypes.array.isRequired,\n  // classes: PropTypes.object.isRequired,\n  // fetchMe: PropTypes.func.isRequired,\n};\n\n\nconst mapStateToProps = (state) => ({\n\n  userLoading: selectUserLoading(state),\n  userFailed: selectUserFailed(state),\n  user: selectUser(state),\n\n\n});\n\nconst dispatchers = {\n\n  // fetchMe\n\n};\n\n\nexport default connect(mapStateToProps, dispatchers)(Header);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Game.js",["166","167","168","169","170","171","172","173"],"import React, { useState } from \"react\";\nimport { createDot } from './util';\nimport Control from './Control';\nimport Score from './Score';\nimport '../App.css';\nimport Dot from './Dot';\nimport Line from '../lines/line';\nimport { render } from \"@testing-library/react\";\nimport { COLORS, SIZES } from './constants';\nimport ButtonGroup from '@material-ui/core/ButtonGroup'\nimport Button from '@material-ui/core/Button'\nimport {connect} from 'react-redux'\nimport {createResult} from '../redux/ducks/result'\nimport {Component} from 'react'\nimport PropTypes from \"prop-types\";\nimport ReactDOM from 'react-dom'\n\n\nclass Game extends Component{\n  constructor(props){\n    super(props);\n    var today = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    this.state= {\n      id : null,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      user:null,\n      accuracy:null,\n      time:null,\n    };\n\n    this.handleSubmit = this.handleSubmit.bind(this);\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  handleChange(event){\n    this.setState({\n      ...this,\n      ...{\n        [event.target.name]: event.target.value,\n      },\n    });\n  }\n  handleSubmit(event){\n    console.log(\"Result has been submitted.\");\n    event.preventDefault();\n    this.props.createResult(this.state);\n    this.props.history.push(\"/Game\");\n    console.log(localStorage.getItem(\"acessToken\"));\n    window.location.reload(false);\n  }\n\n\n  stat=true;\n  time=0;\n  start={\"minute\":0,\"second\":0};\n  count=1;\n  total=0;\n  accuracy=0;\n  mistakes=0; \n  dots = []\n  valX = []\n  valY = []\n  colorarray =[]\n  sizearray =[]\n  //25 dots in total\n  dotNum = 25;\n  render(){\n    return (\n    <div className=\"main\">\n          <div className=\"panel\">\n          <div className=\"control\">\n            <div className=\"control__buttons\">\n                {\n                  <form onSubmit={this.handleSubmit}>\n                    <ButtonGroup variant=\"text\" color=\"primary\" aria-label=\"text primary button group\">\n                    <Button onClick={this.startGame}>START</Button>\n                    <Button onClick={this.calculateResult}>STOP</Button>\n                    <Button type='submit'>SUBMIT</Button>\n                    </ButtonGroup>  \n                  </form>                \n                }\n                {/* <button o.nClick={onClear}>CLEAR</button> */}\n            </div>\n          </div>\n            <div className=\"time\">\n              <p name=\"time\" onChange={this.handleChange}>{`Time: ${this.time}s`}</p>\n              <p name=\"accuracy\" onChange={this.handleChange}>{`Accuracy: ${this.accuracy}%`}</p>\n            </div>\n          </div>\n          <div className=\"field\" >\n           {this.renderdots()}\n           <Line valX={this.valX} valY={this.valY} count={this.count}></Line>\n          </div>\n      </div>\n  );\n  }\n  random = () => {\n    for (var i = 0; i < this.dotNum; i++) {\n      const color = COLORS[Math.floor(Math.random() * COLORS.length)]\n      const size = SIZES[Math.floor(Math.random() * SIZES.length)]\n      let x = Math.floor(Math.random() * 1200);\n      let y = Math.floor(Math.random() * 450);\n      var overlap = false;\n      if(overlap === true){\n        i--;\n        continue;\n      }\n    for(var z = 0; z<this.valY.length; z++){\n      //check for overlap\n      if(Math.abs(y - this.valY[z])<40 && Math.abs(x- this.valX[z])<40){\n        overlap = true;\n        break;\n      }\n    }\n  \n    if(overlap === true){\n      i--;\n      continue;\n    }\n\n    //if no overlap\n    this.valX.push(x);\n    this.valY.push(y);\n    this.colorarray.push(color);\n    this.sizearray.push(size);\n    this.forceUpdate();\n  }\n}\n\n  clearDots = () => {\n    for(var i=0;i<25;i++){\n      this.valX.pop();\n      this.valY.pop();\n    }\n  }\n  click = (i) => {\n    this.total=this.total+1;\n    if (this.count===i){\n      //alert(\"correct\");\n      this.count = this.count+1; \n    }\n    else{\n      console.log(\"count\",this.count);\n      alert(\"wrong\");\n      this.mistakes = this.mistakes+1;\n    }\n    this.forceUpdate();\n  }\nrenderdots = () => {\nif(!this.stat){\n  return null;\n}\nreturn (\n  <>{this.valX.map((x,index)=> (\n    <Dot color={this.colorarray[index]} x={x} y={this.valY[index]} size={this.sizearray[index]} func={this.click} i={index+1} ></Dot>\n  ))}\n  </>\n)\n}\n\nstartGame=()=> {\n  alert(\"Game starts!\");\n  this.stat = true;\n  this.clearDots();\n  this.random();\n  this.renderdots();\n  this.time = 0;\n  this.count=1;\n  this.accuracy = 0;\n  this.mistakes = 0;\n  this.total = 0;\n  var starttime = {\n    \"minute\":new Date().getMinutes(),\n    \"second\":new Date().getSeconds()\n  }\n  //setStart(starttime);\n  this.start = starttime;\n  this.forceUpdate();\n}\n\ncalculateResult = () => {\n  if(this.count != 26){\n    alert(\"You have not completed the test!\")\n    return;\n  }\n  this.accuracy = parseFloat((this.total-this.mistakes)/this.total).toPrecision(2)*100;\n  this.setState({accuracy:this.accuracy});\n  this.count = 1;\n  this.total = 0;\n  this.mistakes = 0;\n  var Time = {\n    \"Minute\":new Date().getMinutes() - this.start.minute,\n    \"Second\":new Date().getSeconds() - this.start.second\n  }\n  var t = Time.Minute*60+Time.Second;\n  if(Time.Second<this.start.second){\n    Time.Minute = Time.Minute - 1;\n    Time.Second = Time.Second + 60;\n  }\n  this.time = t;\n  this.setState({time:t});\n  this.forceUpdate();\n}\n}\nGame.propTypes = {\n  /** An action creator for authenticating login */\n  createResult: PropTypes.func.isRequired\n};\n\nconst dispatchers = {\n  createResult\n};\n\nexport default connect(() => ({}), dispatchers)(Game)","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\util.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Control.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Score.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\lines\\line.js",["174"],"import React, { useRef, useEffect } from 'react';\n\nimport './line.css';\n\n \nconst App= (props) => {\n  const {valX , valY, count} = props ;\n  const canvas = useRef();\n  let ctx = null;\n console.log(count,\"hello\");\n  // initialize the canvas context\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n \n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  });\n  let nodenumber=count-1; //code for showing/hidinglines\n//  let nodenumber=2;\n  useEffect(() => {\n    for (let i=1;i<nodenumber;i++){\n     drawLine({ x: valX[i-1], y: valY[i-1], x1: valX[i], y1: valY[i] });\n     console.log(nodenumber);\n    // drawLine({  x: valX[1], y: valY[1], x1: valX[2], y1: valY[2] }, { color: 'black' });\n \n    // drawLine({ x: valX[2], y: valY[2], x1: valX[3], y1: valY[3] });\n    // drawLine({ x: valX[3], y: valY[3], x1: valX[4], y1: valY[4] });\n    // drawLine({ x: valX[4], y: valY[4], x1: valX[5], y1: valY[5] });\n    // drawLine({ x: valX[5], y: valY[5], x1: valX[6], y1: valY[6] });\n    // drawLine({ x: valX[6], y: valY[6], x1: valX[7], y1: valY[7] });\n    // drawLine({ x: valX[7], y: valY[7], x1: valX[8], y1: valY[8] });\n    // drawLine({ x: valX[8], y: valY[8], x1: valX[9], y1: valY[9] });\n    // drawLine({ x: valX[9], y: valY[9], x1: valX[10], y1: valY[10] });\n    // drawLine({ x: valX[10], y: valY[10], x1: valX[11], y1: valY[11] });\n    // drawLine({ x: valX[11], y: valY[11], x1: valX[12], y1: valY[12] });\n    // drawLine({ x: valX[12], y: valY[12], x1: valX[13], y1: valY[13] });\n    // drawLine({ x: valX[13], y: valY[13], x1: valX[14], y1: valY[14] });\n    // drawLine({ x: valX[14], y: valY[14], x1: valX[15], y1: valY[15] });\n    // drawLine({ x: valX[15], y: valY[15], x1: valX[16], y1: valY[16] });\n    // drawLine({ x: valX[16], y: valY[16], x1: valX[17], y1: valY[17] });\n    // drawLine({ x: valX[17], y: valY[17], x1: valX[18], y1: valY[18] });\n    // drawLine({ x: valX[18], y: valY[18], x1: valX[19], y1: valY[19] });\n    // drawLine({ x: valX[19], y: valY[19], x1: valX[20], y1: valY[20] });\n    // drawLine({ x: valX[20], y: valY[20], x1: valX[21], y1: valY[21] });\n    // drawLine({ x: valX[21], y: valY[21], x1: valX[22], y1: valY[22] });\n    // drawLine({ x: valX[22], y: valY[22], x1: valX[23], y1: valY[23] });\n    // drawLine({ x: valX[23], y: valY[23], x1: valX[24], y1: valY[24] });\n \n \n    }\n  });\n \n  // draw a line\n  const drawLine = (info, style = {}) => {\n    const { x, y, x1, y1 } = info;\n    const { color = 'black', width = 1 } = style;\n \n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n \n  return (\n    <div className=\"App\">\n     \n      <canvas ref={canvas}></canvas>\n    </div>\n  );\n}\n \nexport default App;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\constants.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Dot.js",["175"],"import React from 'react';\n\nconst Dot = (props) => {\n    const {color, x, y, size, index, func,i} = props;    \n    const dotStyle = {\n        backgroundColor: color,\n        height: `${size}px`,\n        width: `${size}px`,\n        left: `${x}px`,\n        top: `${y}px`,\n    };\n\n    return (\n        <div \n            className=\"dot\"\n            style={dotStyle}\n            onClick={() => func(i)}\n        >{i}</div>\n    );\n};\n\nexport default Dot;\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\diagnosis.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\result.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\ViewDiagnosisDoc.js",["176","177","178","179","180"],"import {BrowserRouter as Router} from \"react-router-dom\";\nimport React, { Component } from \"react\";\n\nimport \"./Diagnosis.css\";\nimport {fetchDiagnosis, selectDiagnosis, selectDiagnosisFailed, selectDiagnosisLoading} from \"../redux/ducks/diagnosis\";\nimport {\n  fetchMe,\n  selectUser,\n  selectUserLoading,\n  selectUserFailed\n} from '../redux/ducks/auth.js'\nimport {deleteDiagnosis} from \"../redux/ducks/diagnosis\";\n\nimport Moment from 'moment';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport {  Paper,  Typography,Divider,Tooltip,Button } from \"@material-ui/core\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit,faTrashAlt,faPlusCircle,faCheckCircle,faExclamationCircle,faThumbsUp} from '@fortawesome/free-solid-svg-icons';\nimport Graph from './Graph.js'\n// const history = useHistory();\n\n\nclass ViewDiagnosisDoc extends Component {\n  constructor(props) {\n    super(props);\n   \n    this.state = {\n     // id: this.props.match.params.id,\n      //username: null,\n  \n      result : this.props.match.params.id\n \n      \n    };\n  }\n   \n  componentDidMount(){\n   \n   this.props.fetchDiagnosis(this.state)\n    //this.props.fetchMe(this.state)\n   \n  }\n\n \n  deleteData = () =>{\n\n    this.props.deleteDiagnosis(this.props.diagnosis)\n    this.props.history.push(\"/Login\");\n   // window.location.reload();\n\n  \n  }\n\n\n  goPage = (page) => {\n    this.props.history.push(page);\n  }\n \n  render=()=>{\n    \n   \n    // this.setState({role: this.props.user.role})\n    \n    //  localStorage.setItem('role', this.props.user.role);\n    // console.log(role)\n    console.log(this.props.fetchMe.role)\n    \n    if(this.props.diagnosisLoading){\n      return(\n           <loader/>\n      )\n      }\n      else if(this.props.diagnosisFailed ){\n        \n        // let isDoctor = true\n        // let isDoctor = role== \"ROLE_DOCTOR\";\n         let isDoctor = localStorage.getItem(\"role\")==\"ROLE_DOCTOR\";\n        console.log(isDoctor)\n        return(\n        \n          \n          <div className=\"wrapper\">\n                <h1 style={{textAlign: \"center\"}}>Diagnosis</h1>\n              \n                <form >\n                <Paper style={{ padding:50, justifyContent: \"center\",margin:\"auto\",width:750}}>\n                  \n                      <label>\n                          <div><Typography style={{fontSize: 20,fontWeight: 600}} >CreatedBy :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}} >not available </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                          \n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}>CreatedDate :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}}>not available </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                         \n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}>Category :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}}>not available </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}>Comments :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}}>not available </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}>Last modified by: </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}}>not available </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}>Last modified date: </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}}>not available </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                        <div style={{marginTop: 30,marginLeft:350}}>\n                      {isDoctor ?                                                                                                                                                      \n                          <FontAwesomeIcon icon={faPlusCircle} style={{color: \"#115293\"}}size = '3x' variant=\"contained\" color=\"primary\" onClick={() => this.goPage( `/SubmitDiagnosis/${this.state.result} `)}/>\n                      : null}\n                        </div>\n                      </label>\n                  </Paper>\n                </form>\n               \n              </div>\n                \n        )\n      }\n    \n   \n    else{\n     // let isDiagnosisExist =  this.props.diagnosis.id;\n    //  let isDoctor = true\n    // let isDoctor = role== \"ROLE_DOCTOR\";\n //   let isDoctor = role== \"ROLE_DOCTOR\";\n    //  let isDoctor = localStorage.getItem(\"role\")==\"ROLE_DOCTOR\";\n    // console.log(role)\n    let isDoctor = localStorage.getItem(\"role\")==\"ROLE_DOCTOR\";\n    const cat = this.props.diagnosis.label;\n    let isLow = cat == \"Low\";\n    let isHigh = cat == \"High\";\n    let isModerate = cat == \"Moderate\";\n     return (\n       \n         //    let match = useRouteMatch();\n        <Router>\n          \n          <div className=\"wrapper\">\n                <h1 style={{textAlign: \"center\"}}>Diagnosis</h1>\n              \n                <form >\n                <Paper style={{ padding:50, justifyContent: \"center\",margin:\"auto\",width:750}}>\n                  <label>\n                    <Graph></Graph>\n                  </label>\n                      <label>\n                          <div><Typography  style={{fontSize: 20,fontWeight: 600}} >CreatedBy :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}} > {this.props.diagnosis.createdBy}</Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}  >CreatedDate :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}} >{Moment(this.props.diagnosis.createdDate).format('DD-MM-YYYY')} </Typography></div>\n                          <Divider />\n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}  >Category :   </Typography></div>\n                          <div>\n                            <Typography style={{marginTop: 10,fontSize:18}} >\n                              {this.props.diagnosis.label}\n                              {isLow ? \n                              <Tooltip title={<h4 style={{fontSize:13}}>You have poor cognitive flexibility and working memory.Please practice more!</h4>}>\n                                <Button style={{ backgroundColor: 'transparent' }}>\n                                  <FontAwesomeIcon icon={faExclamationCircle} style={{color: \"#CC0000\",marginLeft:50}}  size = '2x' variant=\"contained\" color=\"primary\"/>\n                                </Button>\n                              </Tooltip>\n                              : null}\n                              {isHigh ? \n                              <Tooltip title={<h4 style={{fontSize:13}}>Excellent! You have good cognitive flexibility and working memory.</h4>}>\n                                <Button style={{ backgroundColor: 'transparent' }}>\n                                  <FontAwesomeIcon icon={faThumbsUp} style={{color: \"#FF9999\",marginLeft:50}}  size = '2x' variant=\"contained\" color=\"primary\"/>\n                                </Button>\n                              </Tooltip>\n                              : null}\n                              {isModerate ? \n                              <Tooltip title={<h4 style={{fontSize:13}}>You have normal cognitive flexibility and working memory.</h4>}>\n                                <Button style={{ backgroundColor: 'transparent' }}>\n                                   <FontAwesomeIcon icon={faCheckCircle} style={{color: \"#009900\",marginLeft:50}}  size = '2x' variant=\"contained\" color=\"primary\"/>\n                                </Button>\n                              </Tooltip>\n                              : null}\n                            </Typography>\n                          </div>\n                          <Divider />\n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}  >Comments :  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}} >{this.props.diagnosis.description}  </Typography></div>\n                          <Divider />\n                         \n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}  >last modified by:  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}} >{this.props.diagnosis.lastModifiedBy}</Typography></div>\n                          <Divider />\n                      \n                      </label>\n                      <label>\n                          <div style={{marginTop: 25}}><Typography  style={{fontSize: 20,fontWeight: 600}}  >last modified date:  </Typography></div>\n                          <div><Typography style={{marginTop: 10,fontSize:18}} >{Moment(this.props.diagnosis.lastModifiedDate).format('DD-MM-YYYY')}</Typography></div>\n                          <Divider />\n                       \n                      </label>\n                      <label>\n                      {isDoctor ? \n                          <div style={{marginTop: 30,marginLeft:300}}>                                                                                                                                    \n                              <div><FontAwesomeIcon icon={faEdit} style={{color: \"#115293\"}}  size = '2x' variant=\"contained\" color=\"primary\" onClick={() => this.goPage(`/editDiagnosis/${this.state.result}`)}/>\n                                  <FontAwesomeIcon icon={faTrashAlt} style={{ marginLeft: 100,color: \"#115293\" }}size = '2x' variant=\"contained\" color=\"primary\" onClick={() => {if (window.confirm('Are you sure you wish to delete this item?'))this.deleteData()}}/> \n                              </div>\n                          </div>\n                          : null}\n                      </label>\n                  </Paper>\n                </form>\n              </div>\n             \n                    \n        </Router>\n   )}\n  }\n}\n\n\nViewDiagnosisDoc.propTypes = {\n \n  fetchDiagnosis: PropTypes.func.isRequired,\n  deleteDiagnosis: PropTypes.func.isRequired,\n  diagnosisLoading:PropTypes.bool.isRequired,\n  diagnosisFailed:PropTypes.bool,\n  diagnosis:PropTypes.object.isRequired,\n  fetchMe: PropTypes.func.isRequired,\n    userLoading: PropTypes.bool.isRequired,\n    userFailed: PropTypes.bool,\n    user: PropTypes.array.isRequired,\n \n\n};\n\n\nconst mapStateToProps = (state) =>({\n    diagnosisLoading:selectDiagnosisLoading(state),\n    diagnosisFailed:selectDiagnosisFailed(state),\n    diagnosis:selectDiagnosis(state),\n    userLoading: selectUserLoading(state),\n    userFailed: selectUserFailed(state),\n    user: selectUser(state),\n\n\n});\n\nconst dispatchers = {\n  fetchDiagnosis,\n  deleteDiagnosis,\n  fetchMe\n\n};\n\nexport default connect(mapStateToProps, dispatchers)(ViewDiagnosisDoc);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\editDiagnosis.js",["181"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateDiagnosis } from \"../redux/ducks/diagnosis\";\nimport { Button, Select, Paper, TextField,Typography } from \"@material-ui/core\";\n//import { Link } from \"react-router-dom\";\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport {faPlusCircle} from '@fortawesome/free-solid-svg-icons';\n\nimport \"./Diagnosis.css\";\nclass editDiagnosis extends Component {\n  constructor(props) {\n    super(props);\n\n    var today = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    this.state = {\n      id: null,\n      //username: null,\n     // id : 1,\n      //id:null,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      result : this.props.match.params.result,\n      doctor : null,\n      label : null,\n      description : null\n      \n    };\n  }\n\n  validateForm() {\n    if (\n      this.state.label == null ||\n      this.state.description == null \n\n    )\n      return false;\n    else\n      return (\n        this.state.label.length > 0 &&\n        this.state.description.length > 0 \n    \n      );\n  }\n\n  updateData = () => {\n    \n    // let doctor = localStorage.getItem(\"doctor\");\n    // console.log(this.state);\n\n    this.props.updateDiagnosis(this.state);\n    this.props.history.push(`/viewDiagnosis/${this.state.result} `);\n    \n      \n  }\n\n  handleInputChange = input => e => {\n    this.setState({[input]: e.target.value})\n  }\n\n  render(){\n    return(\n    <div className=\"wrapper\">\n      <h1 style={{textAlign: \"center\"}}>Diagnosis</h1>\n     \n        <Paper style={{ padding:50, justifyContent: \"center\",margin:\"auto\",width:500}}> \n           \n\n            <label>\n                <div><Typography style={{fontSize: 17}} >Category :  </Typography></div>\n                <Select name=\"label\"  onChange={this.handleInputChange(\"label\")}>\n                    <option value=\"\">--Please choose an option--</option>\n                    <option value=\"Moderate\">Moderate</option>\n                    <option value=\"High\">High</option>\n                    <option value=\"Low\">Low</option>\n                </Select>\n            </label>\n            <label>\n                <div style={{ marginTop: 20 }}>\n                <TextField\n                      id=\"outlined-multiline-static\"\n                      label=\"comments\"\n                      name=\"description\"\n                      style={{ width:500 }} \n                      multiline\n                      rows={10}\n                      variant=\"filled\"\n                      onChange={this.handleInputChange(\"description\")}\n                    />\n                    </div>\n\n            </label>\n            <label>\n              <div style={{marginTop: 30,marginLeft:220}}>\n                <Button  style={{ backgroundColor: 'transparent' }} disabled={!this.validateForm()} onClick={() => this.updateData()}>\n                <FontAwesomeIcon icon={faPlusCircle} style={{color: \"#115293\"}} size = '3x' />\n                </Button>\n              </div>\n            </label>\n        </Paper>\n    </div>\n  );\n}\n}\neditDiagnosis.propTypes = {\n  /** An action creator for authenticating login */\n  updateDiagnosis: PropTypes.func.isRequired\n};\n\nconst dispatchers = {\n  updateDiagnosis\n};\n\nexport default connect(() => ({}), dispatchers)(editDiagnosis);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\SubmitDiagnosis.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Logout.js",["182","183","184","185","186"],"import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Button, CssBaseline, TextField, Container, Typography } from \"@material-ui/core\";\r\nimport {logout} from '../redux/ducks/auth';\r\nimport { BrowserRouter as Router, Route, Switch, Link as RouterLink } from \"react-router-dom\";\r\n/**\r\n * This component displays the logout page for user.\r\n */\r\nexport class LogoutPage extends Component {\r\n    componentDidMount() {\r\n        this.props.logout();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Container component=\"main\" maxWidth=\"xs\" align=\"center\" style={{ marginTop: 150 }} >\r\n                 <CssBaseline />             \r\n                 <Typography variant=\"h4\" style={{ marginBottom: 20 }}>You have logged out</Typography>\r\n                 <Typography variant=\"h5\" style={{ marginBottom: 20 }}>Thanks for visiting.</Typography>\r\n                 <Button\r\n                  data-testid=\"loginButton\"\r\n                  type=\"submit\"\r\n                  href=\"/login\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  style={{ marginTop: 20, height:50, fontsize:30 }}\r\n                >Go back to Login</Button>\r\n                \r\n                </Container>\r\n        )\r\n    }\r\n}\r\n\r\nexport default connect(null,{logout})(LogoutPage)","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\Graph.js",[],{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","replacedBy":"190"},{"ruleId":"191","severity":1,"message":"192","line":2,"column":16,"nodeType":"193","messageId":"194","endLine":2,"endColumn":22},{"ruleId":"191","severity":1,"message":"195","line":6,"column":3,"nodeType":"193","messageId":"194","endLine":6,"endColumn":20},{"ruleId":"191","severity":1,"message":"196","line":7,"column":3,"nodeType":"193","messageId":"194","endLine":7,"endColumn":19},{"ruleId":"191","severity":1,"message":"197","line":10,"column":10,"nodeType":"193","messageId":"194","endLine":10,"endColumn":18},{"ruleId":"191","severity":1,"message":"198","line":44,"column":15,"nodeType":"193","messageId":"194","endLine":44,"endColumn":23},{"ruleId":"191","severity":1,"message":"199","line":44,"column":25,"nodeType":"193","messageId":"194","endLine":44,"endColumn":33},{"ruleId":"191","severity":1,"message":"200","line":127,"column":7,"nodeType":"193","messageId":"194","endLine":127,"endColumn":15},{"ruleId":"201","severity":1,"message":"202","line":10,"column":1,"nodeType":"203","endLine":35,"endColumn":2},{"ruleId":"201","severity":1,"message":"202","line":25,"column":1,"nodeType":"203","endLine":87,"endColumn":2},{"ruleId":"191","severity":1,"message":"204","line":4,"column":19,"nodeType":"193","messageId":"194","endLine":4,"endColumn":30},{"ruleId":"191","severity":1,"message":"205","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":16},{"ruleId":"191","severity":1,"message":"206","line":30,"column":10,"nodeType":"193","messageId":"194","endLine":30,"endColumn":33},{"ruleId":"191","severity":1,"message":"207","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":20},{"ruleId":"191","severity":1,"message":"208","line":11,"column":3,"nodeType":"193","messageId":"194","endLine":11,"endColumn":10},{"ruleId":"191","severity":1,"message":"209","line":1,"column":17,"nodeType":"193","messageId":"194","endLine":1,"endColumn":25},{"ruleId":"191","severity":1,"message":"210","line":2,"column":10,"nodeType":"193","messageId":"194","endLine":2,"endColumn":19},{"ruleId":"191","severity":1,"message":"211","line":3,"column":8,"nodeType":"193","messageId":"194","endLine":3,"endColumn":15},{"ruleId":"191","severity":1,"message":"212","line":4,"column":8,"nodeType":"193","messageId":"194","endLine":4,"endColumn":13},{"ruleId":"191","severity":1,"message":"213","line":8,"column":10,"nodeType":"193","messageId":"194","endLine":8,"endColumn":16},{"ruleId":"191","severity":1,"message":"214","line":16,"column":8,"nodeType":"193","messageId":"194","endLine":16,"endColumn":16},{"ruleId":"191","severity":1,"message":"215","line":23,"column":5,"nodeType":"193","messageId":"194","endLine":23,"endColumn":9},{"ruleId":"216","severity":1,"message":"217","line":186,"column":17,"nodeType":"218","messageId":"219","endLine":186,"endColumn":19},{"ruleId":"220","severity":1,"message":"221","line":19,"column":11,"nodeType":"222","endLine":19,"endColumn":37},{"ruleId":"191","severity":1,"message":"223","line":4,"column":31,"nodeType":"193","messageId":"194","endLine":4,"endColumn":36},{"ruleId":"216","severity":1,"message":"224","line":78,"column":53,"nodeType":"218","messageId":"219","endLine":78,"endColumn":55},{"ruleId":"216","severity":1,"message":"224","line":144,"column":48,"nodeType":"218","messageId":"219","endLine":144,"endColumn":50},{"ruleId":"216","severity":1,"message":"224","line":146,"column":21,"nodeType":"218","messageId":"219","endLine":146,"endColumn":23},{"ruleId":"216","severity":1,"message":"224","line":147,"column":22,"nodeType":"218","messageId":"219","endLine":147,"endColumn":24},{"ruleId":"216","severity":1,"message":"224","line":148,"column":26,"nodeType":"218","messageId":"219","endLine":148,"endColumn":28},{"ruleId":"191","severity":1,"message":"215","line":17,"column":5,"nodeType":"193","messageId":"194","endLine":17,"endColumn":9},{"ruleId":"191","severity":1,"message":"225","line":3,"column":31,"nodeType":"193","messageId":"194","endLine":3,"endColumn":40},{"ruleId":"191","severity":1,"message":"192","line":5,"column":27,"nodeType":"193","messageId":"194","endLine":5,"endColumn":33},{"ruleId":"191","severity":1,"message":"226","line":5,"column":35,"nodeType":"193","messageId":"194","endLine":5,"endColumn":40},{"ruleId":"191","severity":1,"message":"227","line":5,"column":42,"nodeType":"193","messageId":"194","endLine":5,"endColumn":48},{"ruleId":"191","severity":1,"message":"228","line":5,"column":58,"nodeType":"193","messageId":"194","endLine":5,"endColumn":68},"no-native-reassign",["229"],"no-negated-in-lhs",["230"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'selectUserLoading' is defined but never used.","'selectUserFailed' is defined but never used.","'Redirect' is defined but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'dispatch' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useSelector' is defined but never used.","'Button' is defined but never used.","'AirlineSeatLegroomExtra' is defined but never used.","'withStyles' is defined but never used.","'fetchMe' is defined but never used.","'useState' is defined but never used.","'createDot' is defined but never used.","'Control' is defined but never used.","'Score' is defined but never used.","'render' is defined but never used.","'ReactDOM' is defined but never used.","'date' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'index' is assigned a value but never used.","Expected '===' and instead saw '=='.","'TextField' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'RouterLink' is defined but never used.","no-global-assign","no-unsafe-negation"]