[{"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\index.js":"1","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\App.js":"2","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultController.jsx":"3","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\DoctorResult.jsx":"4","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultList.jsx":"5","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultDetails.jsx":"6","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\PatientResult.jsx":"7","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Login.js":"8","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\users.js":"9","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\apiHelper.js":"10","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\errors.js":"11","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\authHelper.js":"12","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\constants.js":"13","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\NewAccount.js":"14","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\auth.js":"15","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\getCurrentTime.js":"16","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\store.js":"17","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\AppRouter.js":"18","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\rootReducer.js":"19","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\UpdateUser.js":"20","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\SystemAdmin.js":"21","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\Main.js":"22","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Game.js":"23","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\util.js":"24","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Control.js":"25","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Score.js":"26","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\lines\\line.js":"27","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\constants.js":"28","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Dot.js":"29","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\diagnosis.js":"30","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\result.js":"31","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\ViewDiagnosisDoc.js":"32","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\editDiagnosis.js":"33","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\SubmitDiagnosis.js":"34"},{"size":149,"mtime":1615524533344,"results":"35","hashOfConfig":"36"},{"size":331,"mtime":1615725686861,"results":"37","hashOfConfig":"36"},{"size":1815,"mtime":1615988901445,"results":"38","hashOfConfig":"36"},{"size":2374,"mtime":1615988901417,"results":"39","hashOfConfig":"36"},{"size":1113,"mtime":1616002115433,"results":"40","hashOfConfig":"36"},{"size":964,"mtime":1616002155700,"results":"41","hashOfConfig":"36"},{"size":1625,"mtime":1615988901432,"results":"42","hashOfConfig":"36"},{"size":4199,"mtime":1615998058438,"results":"43","hashOfConfig":"36"},{"size":4245,"mtime":1616002749713,"results":"44","hashOfConfig":"36"},{"size":3444,"mtime":1615621076245,"results":"45","hashOfConfig":"36"},{"size":1503,"mtime":1615620982174,"results":"46","hashOfConfig":"36"},{"size":336,"mtime":1615788279740,"results":"47","hashOfConfig":"36"},{"size":311,"mtime":1614652148574,"results":"48","hashOfConfig":"36"},{"size":5454,"mtime":1615998354718,"results":"49","hashOfConfig":"36"},{"size":5403,"mtime":1615899134962,"results":"50","hashOfConfig":"36"},{"size":287,"mtime":1614652156706,"results":"51","hashOfConfig":"36"},{"size":354,"mtime":1615621121693,"results":"52","hashOfConfig":"36"},{"size":3320,"mtime":1616002517784,"results":"53","hashOfConfig":"36"},{"size":398,"mtime":1615621102786,"results":"54","hashOfConfig":"36"},{"size":5289,"mtime":1615617501504,"results":"55","hashOfConfig":"36"},{"size":4642,"mtime":1615998212724,"results":"56","hashOfConfig":"36"},{"size":5055,"mtime":1616002715163,"results":"57","hashOfConfig":"36"},{"size":2543,"mtime":1615524592186,"results":"58","hashOfConfig":"36"},{"size":432,"mtime":1615524592351,"results":"59","hashOfConfig":"36"},{"size":685,"mtime":1615524592127,"results":"60","hashOfConfig":"36"},{"size":204,"mtime":1615524592212,"results":"61","hashOfConfig":"36"},{"size":2660,"mtime":1615524592469,"results":"62","hashOfConfig":"36"},{"size":172,"mtime":1615524592255,"results":"63","hashOfConfig":"36"},{"size":448,"mtime":1615524592152,"results":"64","hashOfConfig":"36"},{"size":2786,"mtime":1615620930002,"results":"65","hashOfConfig":"36"},{"size":3636,"mtime":1615988901386,"results":"66","hashOfConfig":"36"},{"size":5291,"mtime":1615989114598,"results":"67","hashOfConfig":"36"},{"size":2629,"mtime":1615989114611,"results":"68","hashOfConfig":"36"},{"size":3209,"mtime":1615996387725,"results":"69","hashOfConfig":"36"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},"1e8ofe4",{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"72"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"72"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"87","usedDeprecatedRules":"72"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"72"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"72"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"106","usedDeprecatedRules":"72"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"72"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"72"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"72"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"143","usedDeprecatedRules":"72"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"146","usedDeprecatedRules":"72"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"72"},"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\index.js",[],["150","151"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\App.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultController.jsx",["152","153","154","155","156","157","158"],"import React, { Component } from \"react\";\nimport ResultList from './ResultList.jsx'\nimport DoctorResult from './DoctorResult.jsx'\nimport PatientResult from './PatientResult'\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams,\n    Redirect\n} from \"react-router-dom\";\nimport {\n    fetchMe,\n    selectUser,\n    selectUserLoading,\n    selectUserFailed\n} from '../redux/ducks/auth.js'\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport store from '../redux/store.js'\n\nclass ResultController extends Component {\n    componentDidMount = () => {\n        this.props.fetchMe(this.state)\n    }\n    calcRedirect = (userRole) => {\n        if (userRole === 'doctor') {\n            return <Redirect from={this.props.path} to={`${this.props.path}/doctor`} />\n        } else {\n            return <Redirect from={this.props.path} to={`${this.props.path}/patient`} />\n        }\n    }\n    render = () => {\n        const {role} = this.props.user\n        return (\n            <div>\n                {this.calcRedirect(role)}\n                <Route path={`${this.props.path}/doctor`}>\n                    <DoctorResult path={`${this.props.path}/doctor`}/>\n                </Route>\n                <Route path={`${this.props.path}/patient`}>\n                    <PatientResult/>\n                </Route>\n            </div>\n        )\n    }\n}\n\nResultController.propTypes = {\n    userLoading: PropTypes.bool.isRequired,\n    userFailed: PropTypes.bool,\n    user: PropTypes.object.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    userLoading: selectUserLoading(state),\n    userFailed: selectUserFailed(state),\n    user: selectUser(state),\n});\n\nconst dispatchers = {\n    fetchMe\n};\n\nexport default connect(mapStateToProps, dispatchers)(ResultController);\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\DoctorResult.jsx",["159","160"],"// import {\n//     BrowserRouter as Router,\n//     Switch,\n//     Route,\n//     Link,\n//     useRouteMatch,\n//     useParams\n// } from \"react-router-dom\";\n\n// import PatientResult from './PatientResult'\n// export default function DoctorResult(props){\n//     let match = useRouteMatch();\n//     return (\n        \n//         <div>\n//             <ul>\n//                 {props.patientList.map(\n//                     (patient) => \n//                     <Link key={patient.id.toString()} to={`${match.url}/patientDetails/${patient.id}`}>\n//                         <li>Patient id: {patient.id}</li>\n//                     </Link>\n//                 )}\n//             </ul>\n//             <Switch>\n//                 <Route path={`${match.path}/patientDetails/:patientId`}>\n//                     <PatientResult/>\n//                 </Route>\n//             </Switch>\n//         </div>\n//     )\n// }\n\nimport React, { Component } from \"react\";\nimport {\n    useParams,\n    Route,\n} from \"react-router-dom\";\nimport { \n    listUserResults,\n    listAllResults,    \n    selectResultsLoading,\n    selectResultsFailed,\n    selectResults,\n} from '../redux/ducks/result'\nimport {\n    listUsers,\n    selectUsers,\n    selectUsersLoading,\n    selectUsersFailed\n} from '../redux/ducks/users'\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ResultList from './ResultList.jsx'\n\nclass DoctorResult extends Component {\n    componentDidMount(){\n        this.props.listAllResults(this.state)\n    }\n\n    render = () => {\n        console.log(this.props.results)\n        return <ResultList resultHistory={this.props.results}/>\n    }\n}\n\nDoctorResult.propTypes = {\n    listUserResults: PropTypes.func.isRequired,\n    listAllResults: PropTypes.func.isRequired,\n    listUsers: PropTypes.func.isRequired,\n    resultsLoading: PropTypes.bool.isRequired,\n    resultsFailed: PropTypes.bool,\n    results: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    resultsLoading: selectResultsLoading(state),\n    resultsFailed: selectResultsFailed(state),\n    results: selectResults(state),\n    usersLoading: selectUsersLoading(state),\n    usersFailed: selectUsersFailed(state),\n    users: selectUsers(state),\n});\n\nconst dispatchers = {\n    listUserResults,\n    listAllResults,\n    listUsers\n};\n\nexport default connect(mapStateToProps, dispatchers)(DoctorResult);\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultList.jsx",["161","162","163"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultDetails.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\PatientResult.jsx",["164"],"import React, { Component } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { \n    listUserResults,    \n    selectResultsLoading,\n    selectResultsFailed,\n    selectResults,\n} from '../redux/ducks/result'\nimport { connect } from \"react-redux\";\nimport PropTypes from \"prop-types\";\nimport ResultList from './ResultList.jsx'\n\nclass PatientResult extends Component {\n    componentDidMount(){\n        this.props.listUserResults(this.state)\n    }\n\n    render = () => {\n        if (this.props.resultsLoading) {\n            return <div>Loading results...</div>\n        } else if (this.props.resultsFailed) {\n            return <div>Load results failed.</div>\n        } else {\n            return <ResultList resultHistory={this.props.results}/>\n        }\n    }\n}\n\nPatientResult.propTypes = {\n    /** An action creator */\n    listUserResults: PropTypes.func.isRequired,\n    /** A boolean to determine if the results are still being loaded (true: still loading, false: fully loaded) */\n    resultsLoading: PropTypes.bool.isRequired,\n    /** A boolean to determine if the users failed to be loaded the action creator(true: still loading or failed to load, false: successful load) */\n    resultsFailed: PropTypes.bool,\n    /** An array of results objects loaded by the action creator */\n    results: PropTypes.array.isRequired,\n};\n\nconst mapStateToProps = state => ({\n    resultsLoading: selectResultsLoading(state),\n    resultsFailed: selectResultsFailed(state),\n    results: selectResults(state),\n});\n\nconst dispatchers = {\n    listUserResults\n};\n\nexport default connect(mapStateToProps, dispatchers)(PatientResult);\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Login.js",["165","166","167"],"import React, { Component } from \"react\";\r\nimport { Button, CssBaseline, TextField, Container, Typography } from \"@material-ui/core\";\r\nimport { authenticateLogin } from \"../redux/ducks/auth\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n//import { getRoles } from \"@testing-library/dom\";\r\n\r\n\r\n//import \"./Login.css\";\r\n\r\n\r\nclass LoginPage extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      username: \"\",\r\n      password: \"\"\r\n    };\r\n  }\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  };\r\n\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    try {\r\n    this.setState({ username: \"\", password: \"\" });\r\n    const { username, password } = this.state;\r\n    this.props.login(this.state);\r\n    this.props.history.push('/main');\r\n  } catch (e) {\r\n    alert(e.message);\r\n  }\r\n  };\r\n  //  var a = localStorage.fetchMe(\"role\");\r\n  //   console.log(this.state);\r\n  //   if(a===\"ROLE_DOCTOR\"){\r\n  //     this.props.history.push('/doctor');}\r\n  //     else if (a===\"ROLE_ADMIN\"){\r\n  //       this.props.history.push('/systemadmin');\r\n  //     }\r\n  //     else{\r\n  //       this.props.history.push('/user');\r\n  //     }\r\n\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"main\" data-test=\"loginContainer\">\r\n        <Container component=\"main\" maxWidth=\"xs\" align=\"center\" style={{ marginTop: 150 }} >\r\n          <CssBaseline />\r\n          <div className=\"login-form\">\r\n            <Typography variant=\"h3\" style={{ marginBottom: 20 }}>Login</Typography>\r\n\r\n            <form\r\n              noValidate\r\n              onSubmit={this.handleSubmit}>\r\n              {this.props.fetchMeSuccessAction ? \"Logged in\" : \"\"}\r\n              {this.props.fetchMeRequestAction && !this.props.fetchMeSuccessAction ? \"Logging..\" : \"\"}\r\n              <TextField\r\n                data-testid=\"usernameField\"\r\n                onChange={this.handleChange}\r\n                value={this.state.username}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                id=\"username\"\r\n                label=\"Username\"\r\n                name=\"username\"\r\n                autoComplete=\"username\"\r\n                autoFocus\r\n              //style={{height:25, width:200, marginLeft:55}}\r\n              />\r\n\r\n              <TextField\r\n                data-testid=\"passwordField\"\r\n                onChange={this.handleChange}\r\n                value={this.state.password}\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                required\r\n                fullWidth\r\n                name=\"password\"\r\n                label=\"Password\"\r\n                type=\"password\"\r\n                id=\"password\"\r\n                autoComplete=\"current-password\"\r\n              //style={{height:25, width:200, marginLeft:55}}\r\n              />\r\n              <div className=\"form-group\">\r\n                <Button\r\n                  data-testid=\"loginButton\"\r\n                  type=\"submit\"\r\n                  fullWidth\r\n                  variant=\"contained\"\r\n                  color=\"secondary\"\r\n                  style={{ marginTop: 20 }}\r\n                >Login</Button>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\nLoginPage.propTypes = {\r\n  /** An action creator for authenticating login */\r\n  authenticateLogin: PropTypes.func.isRequired,\r\n  fetchMeSuccessAction:PropTypes.func.isRequired,\r\n  fetchMeRequestAction:PropTypes.func.isRequired,\r\n  // fetchMe:PropTypes.func.isRequired\r\n  /** An object used for styling */\r\n};\r\n\r\nconst dispatch = {\r\n  authenticateLogin\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n    fetchMeSuccessAction: state.fetchMeSuccessAction,\r\n    fetchMeRequestAction: state.fetchMeRequestAction\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = dispatch => {\r\n  return {\r\n    login: data => dispatch(authenticateLogin(data))\r\n  };\r\n};\r\n// const connectedLoginPage = connect(mapStateToProps)(LoginPage);\r\n// export { connectedLoginPage as LoginPage }; \r\nexport default connect(mapStateToProps,\r\n  mapDispatchToProps)(LoginPage);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\users.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\apiHelper.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\errors.js",["168"],"// ACTION TYPES\r\nconst ERROR_DISPLAY = 'ERROR_DISPLAY';\r\nconst ERROR_CLOSE = 'ERROR_CLOSE';\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  errors: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ERROR_DISPLAY:\r\n      return {\r\n        ...state,\r\n        errors: [...state.errors, action.payload],\r\n      }\r\n\r\n    case ERROR_CLOSE:\r\n      return {\r\n        ...state,\r\n        errors: state.errors.map(error => {\r\n          if (error.id === action.payload)\r\n            return {\r\n              ...error,\r\n              isVisible: false,\r\n            };\r\n          else\r\n            return error;\r\n        }),\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// ACTION CREATORS\r\nfunction displayErrorAction(error) {\r\n  // Generate unique ID\r\n  return {\r\n    type: ERROR_DISPLAY,\r\n    payload: error,\r\n  }\r\n}\r\n\r\nfunction closeErrorAction(id) {\r\n  return {\r\n    type: ERROR_CLOSE,\r\n    payload: id,\r\n  }\r\n}\r\n\r\n// OPERATIONS\r\nexport const displayError = errorMessage => dispatch => {\r\n  const uid = Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n\r\n  dispatch(displayErrorAction({\r\n    id: uid,\r\n    message: errorMessage,\r\n    isVisible: true,\r\n  }));\r\n\r\n  // Dismiss error alert after 3 seconds\r\n  setTimeout(() => {\r\n    dispatch(closeErrorAction(uid));\r\n  }, 3000);\r\n};\r\n\r\nexport const closeError = id => dispatch => dispatch(closeErrorAction(id));\r\n\r\n// SELECTORS\r\nexport const selectErrors = state => state.errorsReducer.errors;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\authHelper.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\constants.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\NewAccount.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\auth.js",["169"],"import { API_URL } from \"../../utils/constants\";\r\nimport axios from \"axios\";\r\nimport { displayError } from \"./errors\";\r\nimport { getCurrentTime } from \"../../utils/getCurrentTime\";\r\nimport { getTokenConfig } from \"./authHelper\";\r\n\r\n// ACTION TYPES\r\nexport const LOGIN = \"LOGIN\";\r\nexport const LOGOUT = \"LOGOUT\";\r\nexport const FETCH_ME_REQUEST = \"FETCH_ME_REQUEST\";\r\nexport const FETCH_ME_SUCCESS = \"FETCH_ME_SUCCESS\";\r\nexport const FETCH_ME_FAILURE = \"FETCH_ME_FAILURE\";\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  userLoading: true,\r\n  userFailed: null,\r\n  user: {},\r\n  access_token: localStorage.getItem(\"access_token\"),\r\n  refresh_token: localStorage.getItem(\"refresh_token\"),\r\n  expires_in: localStorage.getItem(\"expires_in\"),\r\n  time_token_acquired: getCurrentTime()\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      // Store refresh and access token in localStorage\r\n      const { access_token, refresh_token, expires_in } = action.payload;\r\n\r\n      const currentTime = getCurrentTime();\r\n\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      localStorage.setItem(\"refresh_token\", refresh_token);\r\n      localStorage.setItem(\"expires_in\", expires_in);\r\n      localStorage.setItem(\"time_token_acquired\", currentTime);\r\n\r\n      return {\r\n        ...state,\r\n        access_token: access_token,\r\n        refresh_token: refresh_token,\r\n        expires_in: expires_in,\r\n        time_token_acquired: currentTime\r\n      };\r\n\r\n    case LOGOUT:\r\n      // Remove refresh and access token in localStorage\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"refresh_token\");\r\n      localStorage.removeItem(\"expires_in\");\r\n      localStorage.removeItem(\"current_user\");\r\n      localStorage.removeItem(\"time_token_acquired\");\r\n\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        access_token: \"\",\r\n        refresh_token: \"\",\r\n        expires_in: 0,\r\n        time_token_acquired: \"\"\r\n      };\r\n\r\n    case FETCH_ME_REQUEST:\r\n      return {\r\n        ...state,\r\n        userLoading: true,\r\n        userFailed: false\r\n      };\r\n\r\n    case FETCH_ME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userLoading: false,\r\n        user: action.payload\r\n      };\r\n\r\n    case FETCH_ME_FAILURE:\r\n      return {\r\n        ...state,\r\n        userLoading: false,\r\n        userFailed: true\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\n// ACTION CREATORS\r\nexport function loginAction(payload) {\r\n  return {\r\n    type: LOGIN,\r\n    payload: payload\r\n  };\r\n}\r\n\r\nexport function logoutAction() {\r\n  return {\r\n    type: LOGOUT\r\n  };\r\n}\r\n\r\nexport function fetchMeRequestAction() {\r\n  return {\r\n    type: FETCH_ME_REQUEST\r\n  };\r\n}\r\n\r\nexport function fetchMeSuccessAction(userInfo) {\r\n  return {\r\n    type: FETCH_ME_SUCCESS,\r\n    payload: userInfo\r\n  };\r\n}\r\n\r\nexport function fetchMeFailureAction() {\r\n  return {\r\n    type: FETCH_ME_FAILURE\r\n  };\r\n}\r\n\r\n// OPERATIONS\r\nexport const authenticateLogin = (userData) => (dispatch) => {\r\n  var formdata = new FormData();\r\n  formdata.append(\"username\", userData.username);\r\n  formdata.append(\"password\", userData.password);\r\n  formdata.append(\"grant_type\", \"password\");\r\n\r\n  axios\r\n    .post(`${API_URL}/oauth/token`, formdata, {\r\n      headers: {\r\n        Authorization: `Basic ${btoa(\"my-client:my-secret\")}`\r\n      }\r\n    })\r\n    .then((res) => {\r\n      fetchMe(res.data.access_token)(dispatch);\r\n      dispatch(loginAction(res.data));\r\n    })\r\n    .catch((err) => {\r\n      displayError(\"Unable to login\")(dispatch);\r\n      dispatch(fetchMeFailureAction());\r\n    });\r\n};\r\n\r\nexport const refreshTokenLogin = () => (dispatch, getState) => {\r\n  var formdata = new FormData();\r\n  formdata.append(\"refresh_token\", getState().authReducer.refresh_token);\r\n  formdata.append(\"grant_type\", \"refresh_token\");\r\n\r\n  axios\r\n    .post(`${API_URL}/oauth/token`, formdata, {\r\n      headers: {\r\n        Authorization: `Basic ${btoa(\"my-client:my-secret\")}`\r\n      }\r\n    })\r\n    .then((res) => {\r\n      fetchMe(res.data.access_token)(dispatch);\r\n      dispatch(loginAction(res.data));\r\n    })\r\n    .catch((err) => {\r\n      displayError(\"Unable to login\")(dispatch);\r\n      dispatch(fetchMeFailureAction());\r\n    });\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  axios\r\n    .delete(`${API_URL}/oauth/revoke`, getTokenConfig(getState))\r\n    .then(() => {\r\n      dispatch(logoutAction());\r\n    })\r\n    .catch((err) => {\r\n      displayError(\"Unable to logout\")(dispatch);\r\n    });\r\n};\r\n\r\nexport const fetchMe = (access_token) => (dispatch) => {\r\n  dispatch(fetchMeRequestAction());\r\n\r\n  axios\r\n    .post(\r\n      `${API_URL}/users/me/`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: `bearer ${access_token}`\r\n        }\r\n      }\r\n    )\r\n    .then((res) => {\r\n      dispatch(fetchMeSuccessAction(res.data));\r\n    })\r\n    .catch((err) => {\r\n      displayError(\"Unable to fetch current user information\")(dispatch);\r\n      dispatch(fetchMeFailureAction());\r\n    });\r\n};\r\n\r\n// SELECTORS\r\nexport const selectUserLoading = (state) =>\r\n  state.authReducer.userLoading === true;\r\nexport const selectUserFailed = (state) =>\r\n  state.authReducer.userLoading === false &&\r\n  state.authReducer.userFailed === true;\r\nexport const selectUser = (state) => state.authReducer.user;\r\n\r\nexport const selectRefreshToken = (state) => state.authReducer.refresh_token;\r\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\getCurrentTime.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\store.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\AppRouter.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\rootReducer.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\UpdateUser.js",["170"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateUser } from \"../redux/ducks/users\";\r\nimport { Button, CssBaseline, TextField, Container, Typography } from \"@material-ui/core\";\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\n\r\n\r\nclass UpdateUser extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      email: null,\r\n      role: null,\r\n      name: null,\r\n      dob: null,\r\n      gender: null,\r\n    };\r\n  }\r\n\r\n \r\nvalidateForm() {\r\n  if (\r\n    this.state.email == null ||\r\n    this.state.name == null ||\r\n    this.state.role == null ||\r\n    this.state.dob == null ||\r\n    this.state.gender == null ||\r\n    this.state.pass == null\r\n  )\r\n    return false;\r\n  else\r\n    return (\r\n      this.state.email.length > 0 &&\r\n      this.state.pass.length > 0 &&\r\n      this.state.name.length > 0 &&\r\n      this.state.gender.length > 0 &&\r\n      this.state.dob.length > 0 &&\r\n      this.state.role.length > 0  \r\n    );\r\n}\r\n\r\n\r\n  updateData = () => {\r\n    let role = localStorage.getItem(\"role\");\r\n    console.log(this.state);\r\n    this.props.updateUser(this.state);\r\n  }\r\n\r\n  handleInputChange = input => e => {\r\n    this.setState({ [input]: e.target.value })\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"main\" data-test=\"updateContainer\">\r\n   <Container component=\"main\" maxWidth=\"xs\" align=\"center\"  style={{  marginTop: 130 }} >\r\n      <CssBaseline />\r\n      <div className=\"update-form\">\r\n      <Typography variant=\"h3\" style={{  marginBottom: 20 }}>Update User</Typography>\r\n            <form\r\n              noValidate\r\n            >\r\n              <TextField\r\n              data-testid=\"emailField\"\r\n              onChange={this.handleInputChange(\"email\")}         \r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"Email\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n            />\r\n              <TextField\r\n              data-testid=\"passField\"\r\n              onChange={this.handleInputChange(\"pass\")}         \r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"pass\"\r\n              label=\"Password\"\r\n              name=\"pass\"\r\n              autoComplete=\"pass\"\r\n              autoFocus\r\n            />\r\n              <FormControl component=\"main\">\r\n              <InputLabel required htmlFor=\"role-native-simple\">Role</InputLabel>\r\n              <Select name=\"role\"\r\n               onChange={this.handleInputChange(\"role\")}\r\n                native              \r\n                style={{ width: 400, height: 50 }}\r\n                inputProps={{\r\n                  name: \"role\",\r\n                  id: \"role-native-simple\"\r\n                }}\r\n              >\r\n                <option style={{ fontSize: 18 }} aria-label=\"None\" value=\"\" />\r\n                <option style={{ fontSize: 18 }} value=\"Patient\">Patient</option>\r\n                <option style={{ fontSize: 18 }} value=\"Doctor\">Doctor</option>\r\n              </Select>\r\n            </FormControl>\r\n\r\n            <TextField\r\n              data-testid=\"nameField\"\r\n              onChange={this.handleInputChange(\"name\")}         \r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              required\r\n              fullWidth\r\n              id=\"name\"\r\n              label=\"Name\"\r\n              name=\"name\"\r\n              autoComplete=\"name\"\r\n            />\r\n            <TextField\r\n              data-testid=\"dobField\"\r\n              onChange={this.handleInputChange(\"dob\")}      \r\n              label=\"Date of Birth\"\r\n              type=\"date\"\r\n              fullWidth\r\n              required\r\n              defaultValue=\"YYY-MM-DD\"\r\n              name=\"dob\"\r\n              InputLabelProps={{\r\n                shrink: true,\r\n              }}\r\n            />\r\n            <TextField\r\n              data-testid=\"genderField\"\r\n              onChange={this.handleInputChange(\"gender\")}           \r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              required\r\n              name=\"gender\"\r\n              label=\"Gender\"\r\n              type=\"gender\"\r\n              id=\"gender\"\r\n              autoComplete=\"gender\"\r\n            //style={{height:25, width:200, marginLeft:55}}\r\n            />\r\n            <Button\r\n              data-testid=\"createUserButton\"\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"secondary\"\r\n              disabled={!this.validateForm()} \r\n              style={{ marginTop: 20, height: 50 }}\r\n              onClick={() => this.updateData()}\r\n            >Update!</Button>\r\n            </form>\r\n          </div>\r\n        </Container>\r\n      </div>\r\n    );\r\n  }\r\n\r\n\r\n}\r\nUpdateUser.propTypes = {\r\n  /** An action creator for authenticating login */\r\n  updateUser: PropTypes.func.isRequired\r\n};\r\n\r\nconst dispatchers = {\r\n  updateUser\r\n};\r\n\r\nexport default connect(() => ({}), dispatchers)(UpdateUser);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\SystemAdmin.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\Main.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Game.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\util.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Control.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Score.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\lines\\line.js",["171"],"import React, { useRef, useEffect } from 'react';\nimport './line.css';\n\n \nconst App= (props) => {\n  const {valX , valY} = props ;\n  const canvas = useRef();\n  let ctx = null;\n \n  // initialize the canvas context\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n \n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  });\n \n  useEffect(() => {\n    drawLine({ x: valX[0], y: valY[0], x1: valX[1], y1: valY[1] });\n    drawLine({  x: valX[1], y: valY[1], x1: valX[2], y1: valY[2] }, { color: 'black' });\n \n    drawLine({ x: valX[2], y: valY[2], x1: valX[3], y1: valY[3] });\n    drawLine({ x: valX[3], y: valY[3], x1: valX[4], y1: valY[4] });\n    drawLine({ x: valX[4], y: valY[4], x1: valX[5], y1: valY[5] });\n    drawLine({ x: valX[5], y: valY[5], x1: valX[6], y1: valY[6] });\n    drawLine({ x: valX[6], y: valY[6], x1: valX[7], y1: valY[7] });\n    drawLine({ x: valX[7], y: valY[7], x1: valX[8], y1: valY[8] });\n    drawLine({ x: valX[8], y: valY[8], x1: valX[9], y1: valY[9] });\n    drawLine({ x: valX[9], y: valY[9], x1: valX[10], y1: valY[10] });\n    drawLine({ x: valX[10], y: valY[10], x1: valX[11], y1: valY[11] });\n    drawLine({ x: valX[11], y: valY[11], x1: valX[12], y1: valY[12] });\n    drawLine({ x: valX[12], y: valY[12], x1: valX[13], y1: valY[13] });\n    drawLine({ x: valX[13], y: valY[13], x1: valX[14], y1: valY[14] });\n    drawLine({ x: valX[14], y: valY[14], x1: valX[15], y1: valY[15] });\n    drawLine({ x: valX[15], y: valY[15], x1: valX[16], y1: valY[16] });\n    drawLine({ x: valX[16], y: valY[16], x1: valX[17], y1: valY[17] });\n    drawLine({ x: valX[17], y: valY[17], x1: valX[18], y1: valY[18] });\n    drawLine({ x: valX[18], y: valY[18], x1: valX[19], y1: valY[19] });\n    drawLine({ x: valX[19], y: valY[19], x1: valX[20], y1: valY[20] });\n    drawLine({ x: valX[20], y: valY[20], x1: valX[21], y1: valY[21] });\n    drawLine({ x: valX[21], y: valY[21], x1: valX[22], y1: valY[22] });\n    drawLine({ x: valX[22], y: valY[22], x1: valX[23], y1: valY[23] });\n    drawLine({ x: valX[23], y: valY[23], x1: valX[24], y1: valY[24] });\n \n \n \n  });\n \n  // draw a line\n  const drawLine = (info, style = {}) => {\n    const { x, y, x1, y1 } = info;\n    const { color = 'black', width = 1 } = style;\n \n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n \n  return (\n    <div className=\"App\">\n     \n      <canvas ref={canvas}></canvas>\n    </div>\n  );\n}\n \nexport default App;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\constants.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Dot.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\diagnosis.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\result.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\ViewDiagnosisDoc.js",["172","173","174","175","176","177","178","179"],"import {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams\n} from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport \"./Diagnosis.css\";\nimport {fetchDiagnosis} from \"../redux/ducks/diagnosis\";\nimport {deleteDiagnosis} from \"../redux/ducks/diagnosis\";\nimport { withRouter } from \"react-router-dom\";\nimport Moment from 'moment';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button , Paper, Form, Typography } from \"@material-ui/core\";\n// const history = useHistory();\nclass ViewDiagnosisDoc extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      // id: this.props.match.params.id,\n      //username: null,\n     id :null,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      doctor : null,\n      label : null,\n      description : null\n      \n    };\n  \n    \n    \n  }\n  \n  componentDidMount(){\n    this.props.fetchDiagnosis(this.state).then(resp =>{\n      if(resp){\n        let data = resp.data;\n        this.setState({\n          \n          id:data.id,\n          createdBy: data['createdBy'],\n        createdDate: Moment(data['createdDate']).format('DD-MM-YYYY'),\n        lastModifiedBy: data['lastModifiedBy'],\n        lastModifiedDate: Moment(data['lastModifiedDate']).format('DD-MM-YYYY'),\n        doctor: data['doctor'],\n        label: data['label'],\n        description: data['description'], \n\n      });\n      this.forceUpdate();\n     \n      }else {\n       // this.forceUpdate();\n       \n        this.setState({\n          id:null,\n          createdBy: \"not available \" ,\n        createdDate: \"not available \",\n        lastModifiedBy: \"not available \",\n        lastModifiedDate: \"not available \",\n        doctor: \"not available \",\n        label: \"not available \",\n        description: \"not available \", \n      });\n      this.forceUpdate();\n      }\n     // this.forceUpdate();\n      \n    }) \n  }\n\n \n  deleteData = () =>{\n\n  //  window.location.reload(false);\n    \n    this.props.deleteDiagnosis(this.state)\n    this.setState({id :null});\n   // this.forceUpdate();\n    //this.props.history.push(\"/viewDiagnosis\");\n    window.location.reload();\n  // window.location.reload(false);\n  \n  }\n  goPage = (page) => {\n    this.props.history.push(page);\n  }\n\n  getDate = (date) => {\n    return date.split(' ')[0]\n   }\n\n \n  render() {\n\n     console.log(this.state);\n  //   const role = getUser().role\n  //const role = fetchMe().role\n   //  let role= getUser.role;\n   //console.log(role);\n  // let isDoctor = role== \"ROLE_DOCTOR\";\n    let isDoctor = true;\n  \n    let isDiagnosisExist =  this.state.id;\n     return (\n         //    let match = useRouteMatch();\n        <Router>\n          <div className=\"wrapper\">\n                <h1>Diagnosis</h1>\n              \n                <form >\n                <Paper style={{ padding: 16 }}>\n                  \n                      <label>\n                          <p>CreatedBy :  {this.state.createdBy}</p>\n                        \n                      </label>\n                      <label>\n                          <p>CreatedDate :{this.state.createdDate}</p>\n                        \n                      </label>\n                      <label>\n                          <p>Category :   {this.state.label}  </p>\n                      </label>\n                      <label>\n                          <p>Comments :   {this.state.description} </p>\n                         \n                      </label>\n                      <label>\n                          <p>last modified by:{this.state.lastModifiedBy} </p>\n                      \n                      </label>\n                      <label>\n                          <p>last modified date:{this.state.lastModifiedDate}</p>\n                       \n                      </label>\n                 \n                  </Paper>\n                </form>\n              </div>\n                  <div>\n            <ul>\n            {isDoctor ? \n            <div>\n             {!isDiagnosisExist ?\n                 <Button variant=\"contained\" color=\"primary\" onClick={() => this.goPage(\"/SubmitDiagnosis\")}>Submit New Diagnosis</Button>\n                :null}\n            \n                 {isDiagnosisExist ?\n                   <div><Button variant=\"contained\" color=\"primary\" onClick={() => this.goPage(`/editDiagnosis/1`)}>edit Diagnosis</Button>\n                   <Button variant=\"contained\" color=\"primary\" onClick={() => this.deleteData()}> Delete</Button></div>\n                   :null}\n             </div>\n            : null}\n            \n            </ul>\n            {/* <Switch>\n                {!isDiagnosisExist ?\n                <button onClick={() => this.goPage(\"/SubmitDiagnosis\")}>Submit NEW Diagnosis</button>\n              :null}\n            </Switch> */}\n        </div>\n                    \n        </Router>\n   )}\n}\n\n\nViewDiagnosisDoc.propTypes = {\n  /** An action creator for authenticating login */\n  fetchDiagnosis: PropTypes.func.isRequired,\n  deleteDiagnosis: PropTypes.func.isRequired\n};\n\n\n\n\nconst dispatchers = {\n  fetchDiagnosis,\n  deleteDiagnosis\n};\n\nexport default withRouter(connect(() => ({}), dispatchers)(ViewDiagnosisDoc));","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\editDiagnosis.js",["180","181","182"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateDiagnosis } from \"../redux/ducks/diagnosis\";\nimport { Button, Select, Paper, Container } from \"@material-ui/core\";\n//import { Link } from \"react-router-dom\";\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\nimport \"./Diagnosis.css\";\nclass editDiagnosis extends Component {\n  constructor(props) {\n    super(props);\n\n    var today = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    this.state = {\n      id: this.props.match.params.id,\n      //username: null,\n     // id : 1,\n      //id:null,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      result : null,\n      doctor : null,\n      label : null,\n      description : null\n      \n    };\n  }\n\n  validateForm() {\n    if (\n      this.state.label == null ||\n      this.state.description == null \n\n    )\n      return false;\n    else\n      return (\n        this.state.label.length > 0 &&\n        this.state.description.length > 0 \n    \n      );\n  }\n\n  updateData = () => {\n    \n    let doctor = localStorage.getItem(\"doctor\");\n    console.log(this.state);\n\n    this.props.updateDiagnosis(this.state);\n    this.props.history.push(\"/viewDiagnosis\");\n      \n  }\n\n  handleInputChange = input => e => {\n    this.setState({[input]: e.target.value})\n  }\n\n  render(){\n    return(\n    <div className=\"wrapper\">\n      <h1>Diagnosis</h1>\n     \n        <Paper style={{ padding: 16 }}> \n           \n\n            <label>\n                <p>Category : </p>\n                <Select name=\"label\"  onChange={this.handleInputChange(\"label\")}>\n                    <option value=\"\">--Please choose an option--</option>\n                    <option value=\"moderate\">moderate</option>\n                    <option value=\"High\">High</option>\n                    <option value=\"Low\">Low</option>\n                </Select>\n            </label>\n            <label>\n                <p>Comments :</p>\n                <textarea name=\"description\"  onChange={this.handleInputChange(\"description\")} />\n            </label>\n        </Paper>\n        <p>\n          <Button variant=\"contained\" color=\"primary\" disabled={!this.validateForm()} onClick={() => this.updateData()}>Submit</Button>\n        </p>\n    </div>\n  );\n}\n}\neditDiagnosis.propTypes = {\n  /** An action creator for authenticating login */\n  updateDiagnosis: PropTypes.func.isRequired\n};\n\nconst dispatchers = {\n  updateDiagnosis\n};\n\nexport default connect(() => ({}), dispatchers)(editDiagnosis);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\SubmitDiagnosis.js",["183","184"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createDiagnosis } from \"../redux/ducks/diagnosis\";\n\nimport { Button, Select, Paper, Container } from \"@material-ui/core\";\n//import { Link } from \"react-router-dom\";\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\nimport \"./Diagnosis.css\";\nclass SubmitDiagnosis extends Component {\n  constructor(props) {\n    super(props);\n    var today = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    this.state = {\n     // id: this.props.match.params.id,\n      //username: null,\n      id : 1,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      resultId : this.props.match.params.resultId,\n      doctor : null,\n      label : null,\n      description : null\n      \n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    if (\n      this.state.label == null ||\n      this.state.description == null \n\n    )\n      return false;\n    //initialisation\n    else\n      return (\n        this.state.label.length > 0 &&\n        this.state.description.length > 0 \n    \n      );\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      ...this.state,\n      ...{\n        [event.target.name]: event.target.value,\n      },\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"form was submitted\");\n    event.preventDefault();\n    let doctor = localStorage.getItem(\"doctor\");\n    this.setState({\n      doctor:doctor,\n      createdDate:new Date(),\n      createdBy:doctor\n    })\n    console.log(this.state);\n\n    this.props.createDiagnosis(this.state);\n    this.props.history.push(\"/viewDiagnosis\");\n    window.location.reload(false);\n   \n  }\n\n  render(){\n    return(\n    <div className=\"wrapper\">\n      <h1>Diagnosis</h1>\n     \n      <form onSubmit={this.handleSubmit}>\n        <Paper style={{ padding: 16 }}>\n              <label>\n                  <p>Category : </p>\n                  <Select  name=\"label\"  onChange={this.handleInputChange}>\n                      <option value=\"\">--Please choose an option--</option>\n                      <option value=\"moderate\">moderate</option>\n                      <option value=\"High\">High</option>\n                      <option value=\"Low\">Low</option>\n                  </Select>\n              </label>\n              <label>\n                  <p>Comments :</p>\n                  <textarea name=\"description\"  onChange={this.handleInputChange} />\n              </label>\n        \n        </Paper>\n        <p>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\"  disabled={!this.validateForm()}>Submit</Button>\n        </p>\n      </form>\n    </div>\n  );\n}\n}\nSubmitDiagnosis.propTypes = {\n  /** An action creator for authenticating login */\n  createDiagnosis: PropTypes.func.isRequired\n};\n\nconst dispatchers = {\n  createDiagnosis\n};\n\nexport default connect(() => ({}), dispatchers)(SubmitDiagnosis);\n//export default SubmitDiagnosis;\n//https://www.digitalocean.com/community/tutorials/how-to-build-forms-in-react#prerequisites",{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":2,"column":8,"nodeType":"191","messageId":"192","endLine":2,"endColumn":18},{"ruleId":"189","severity":1,"message":"193","line":6,"column":22,"nodeType":"191","messageId":"192","endLine":6,"endColumn":28},{"ruleId":"189","severity":1,"message":"194","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":11},{"ruleId":"189","severity":1,"message":"195","line":9,"column":5,"nodeType":"191","messageId":"192","endLine":9,"endColumn":9},{"ruleId":"189","severity":1,"message":"196","line":10,"column":5,"nodeType":"191","messageId":"192","endLine":10,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":11,"column":5,"nodeType":"191","messageId":"192","endLine":11,"endColumn":14},{"ruleId":"189","severity":1,"message":"198","line":22,"column":8,"nodeType":"191","messageId":"192","endLine":22,"endColumn":13},{"ruleId":"189","severity":1,"message":"197","line":35,"column":5,"nodeType":"191","messageId":"192","endLine":35,"endColumn":14},{"ruleId":"189","severity":1,"message":"199","line":36,"column":5,"nodeType":"191","messageId":"192","endLine":36,"endColumn":10},{"ruleId":"189","severity":1,"message":"193","line":2,"column":22,"nodeType":"191","messageId":"192","endLine":2,"endColumn":28},{"ruleId":"189","severity":1,"message":"197","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":14},{"ruleId":"200","severity":1,"message":"201","line":21,"column":14,"nodeType":"202","endLine":21,"endColumn":28},{"ruleId":"189","severity":1,"message":"197","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":19},{"ruleId":"189","severity":1,"message":"203","line":32,"column":13,"nodeType":"191","messageId":"192","endLine":32,"endColumn":21},{"ruleId":"189","severity":1,"message":"204","line":32,"column":23,"nodeType":"191","messageId":"192","endLine":32,"endColumn":31},{"ruleId":"189","severity":1,"message":"205","line":122,"column":7,"nodeType":"191","messageId":"192","endLine":122,"endColumn":15},{"ruleId":"206","severity":1,"message":"207","line":10,"column":1,"nodeType":"208","endLine":35,"endColumn":2},{"ruleId":"206","severity":1,"message":"207","line":25,"column":1,"nodeType":"208","endLine":87,"endColumn":2},{"ruleId":"189","severity":1,"message":"209","line":48,"column":9,"nodeType":"191","messageId":"192","endLine":48,"endColumn":13},{"ruleId":"210","severity":1,"message":"211","line":18,"column":11,"nodeType":"212","endLine":18,"endColumn":37},{"ruleId":"189","severity":1,"message":"194","line":3,"column":5,"nodeType":"191","messageId":"192","endLine":3,"endColumn":11},{"ruleId":"189","severity":1,"message":"199","line":4,"column":5,"nodeType":"191","messageId":"192","endLine":4,"endColumn":10},{"ruleId":"189","severity":1,"message":"195","line":5,"column":5,"nodeType":"191","messageId":"192","endLine":5,"endColumn":9},{"ruleId":"189","severity":1,"message":"196","line":6,"column":5,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"197","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":14},{"ruleId":"189","severity":1,"message":"213","line":10,"column":18,"nodeType":"191","messageId":"192","endLine":10,"endColumn":28},{"ruleId":"189","severity":1,"message":"214","line":18,"column":26,"nodeType":"191","messageId":"192","endLine":18,"endColumn":30},{"ruleId":"189","severity":1,"message":"215","line":18,"column":32,"nodeType":"191","messageId":"192","endLine":18,"endColumn":42},{"ruleId":"189","severity":1,"message":"216","line":5,"column":33,"nodeType":"191","messageId":"192","endLine":5,"endColumn":42},{"ruleId":"189","severity":1,"message":"217","line":14,"column":5,"nodeType":"191","messageId":"192","endLine":14,"endColumn":9},{"ruleId":"189","severity":1,"message":"218","line":50,"column":9,"nodeType":"191","messageId":"192","endLine":50,"endColumn":15},{"ruleId":"189","severity":1,"message":"216","line":6,"column":33,"nodeType":"191","messageId":"192","endLine":6,"endColumn":42},{"ruleId":"189","severity":1,"message":"217","line":14,"column":5,"nodeType":"191","messageId":"192","endLine":14,"endColumn":9},"no-native-reassign",["219"],"no-negated-in-lhs",["220"],"no-unused-vars","'ResultList' is defined but never used.","Identifier","unusedVar","'Router' is defined but never used.","'Switch' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'store' is defined but never used.","'Route' is defined but never used.","react/style-prop-object","Style prop value must be an object","JSXAttribute","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'dispatch' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'role' is assigned a value but never used.","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'RouterLink' is defined but never used.","'Form' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'date' is assigned a value but never used.","'doctor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]