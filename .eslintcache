[{"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\index.js":"1","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\App.js":"2","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultController.jsx":"3","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\DoctorResult.jsx":"4","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultList.jsx":"5","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultDetails.jsx":"6","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\PatientResult.jsx":"7","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Login.js":"8","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\users.js":"9","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\apiHelper.js":"10","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\errors.js":"11","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\authHelper.js":"12","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\constants.js":"13","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\NewAccount.js":"14","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\auth.js":"15","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\getCurrentTime.js":"16","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\store.js":"17","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\AppRouter.js":"18","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\rootReducer.js":"19","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\UpdateUser.js":"20","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\SystemAdmin.js":"21","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\Main.js":"22","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Game.js":"23","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\util.js":"24","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Control.js":"25","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Score.js":"26","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\lines\\line.js":"27","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\constants.js":"28","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Dot.js":"29","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\diagnosis.js":"30","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\result.js":"31","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\ViewDiagnosisDoc.js":"32","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\editDiagnosis.js":"33","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\SubmitDiagnosis.js":"34","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Logout.js":"35"},{"size":155,"mtime":1616233562479,"results":"36","hashOfConfig":"37"},{"size":318,"mtime":1616233562007,"results":"38","hashOfConfig":"37"},{"size":1880,"mtime":1616233554782,"results":"39","hashOfConfig":"37"},{"size":1415,"mtime":1616233554649,"results":"40","hashOfConfig":"37"},{"size":1566,"mtime":1616233554915,"results":"41","hashOfConfig":"37"},{"size":964,"mtime":1616233554843,"results":"42","hashOfConfig":"37"},{"size":1579,"mtime":1616233554720,"results":"43","hashOfConfig":"37"},{"size":4191,"mtime":1616338990939,"results":"44","hashOfConfig":"37"},{"size":2998,"mtime":1616233563718,"results":"45","hashOfConfig":"37"},{"size":3306,"mtime":1616233563022,"results":"46","hashOfConfig":"37"},{"size":1432,"mtime":1616233563460,"results":"47","hashOfConfig":"37"},{"size":464,"mtime":1616233563271,"results":"48","hashOfConfig":"37"},{"size":299,"mtime":1616233563832,"results":"49","hashOfConfig":"37"},{"size":5274,"mtime":1616233554995,"results":"50","hashOfConfig":"37"},{"size":5204,"mtime":1616233563151,"results":"51","hashOfConfig":"37"},{"size":275,"mtime":1616233563952,"results":"52","hashOfConfig":"37"},{"size":338,"mtime":1616233562894,"results":"53","hashOfConfig":"37"},{"size":3102,"mtime":1616337917565,"results":"54","hashOfConfig":"37"},{"size":384,"mtime":1616233562775,"results":"55","hashOfConfig":"37"},{"size":5289,"mtime":1616339184881,"results":"56","hashOfConfig":"37"},{"size":6295,"mtime":1616233555077,"results":"57","hashOfConfig":"37"},{"size":9664,"mtime":1616338958628,"results":"58","hashOfConfig":"37"},{"size":2543,"mtime":1616233553769,"results":"59","hashOfConfig":"37"},{"size":432,"mtime":1616233554003,"results":"60","hashOfConfig":"37"},{"size":685,"mtime":1616233553643,"results":"61","hashOfConfig":"37"},{"size":204,"mtime":1616233553832,"results":"62","hashOfConfig":"37"},{"size":2660,"mtime":1616233562621,"results":"63","hashOfConfig":"37"},{"size":172,"mtime":1616233553896,"results":"64","hashOfConfig":"37"},{"size":448,"mtime":1616233553711,"results":"65","hashOfConfig":"37"},{"size":3277,"mtime":1616233563377,"results":"66","hashOfConfig":"37"},{"size":3654,"mtime":1616233563593,"results":"67","hashOfConfig":"37"},{"size":7335,"mtime":1616233555561,"results":"68","hashOfConfig":"37"},{"size":2629,"mtime":1616233555681,"results":"69","hashOfConfig":"37"},{"size":3212,"mtime":1616233555388,"results":"70","hashOfConfig":"37"},{"size":1357,"mtime":1616339074508,"results":"71","hashOfConfig":"37"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},"1e8ofe4",{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"74"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"104","usedDeprecatedRules":"74"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"74"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"122","messages":"123","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"74"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"74"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"74"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"144","usedDeprecatedRules":"74"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"147","usedDeprecatedRules":"74"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\index.js",[],["150","151"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\App.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultController.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\DoctorResult.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultList.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\ResultDetails.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\results\\PatientResult.jsx",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Login.js",["152","153","154","155","156","157"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\users.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\apiHelper.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\errors.js",["158"],"// ACTION TYPES\nconst ERROR_DISPLAY = 'ERROR_DISPLAY';\nconst ERROR_CLOSE = 'ERROR_CLOSE';\n\n// REDUCER\nconst initialState = {\n  errors: [],\n};\n\nexport default function(state = initialState, action) {\n  switch (action.type) {\n    case ERROR_DISPLAY:\n      return {\n        ...state,\n        errors: [...state.errors, action.payload],\n      }\n\n    case ERROR_CLOSE:\n      return {\n        ...state,\n        errors: state.errors.map(error => {\n          if (error.id === action.payload)\n            return {\n              ...error,\n              isVisible: false,\n            };\n          else\n            return error;\n        }),\n      }\n\n    default:\n      return state;\n  }\n};\n\n// ACTION CREATORS\nfunction displayErrorAction(error) {\n  // Generate unique ID\n  return {\n    type: ERROR_DISPLAY,\n    payload: error,\n  }\n}\n\nfunction closeErrorAction(id) {\n  return {\n    type: ERROR_CLOSE,\n    payload: id,\n  }\n}\n\n// OPERATIONS\nexport const displayError = errorMessage => dispatch => {\n  const uid = Date.now().toString(36) + Math.random().toString(36).substr(2);\n\n  dispatch(displayErrorAction({\n    id: uid,\n    message: errorMessage,\n    isVisible: true,\n  }));\n\n  // Dismiss error alert after 3 seconds\n  setTimeout(() => {\n    dispatch(closeErrorAction(uid));\n  }, 3000);\n};\n\nexport const closeError = id => dispatch => dispatch(closeErrorAction(id));\n\n// SELECTORS\nexport const selectErrors = state => state.errorsReducer.errors;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\authHelper.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\constants.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\NewAccount.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\auth.js",["159"],"import { API_URL } from \"../../utils/constants\";\nimport axios from \"axios\";\nimport { displayError } from \"./errors\";\nimport { getCurrentTime } from \"../../utils/getCurrentTime\";\nimport { getTokenConfig } from \"./authHelper\";\n\n// ACTION TYPES\nexport const LOGIN = \"LOGIN\";\nexport const LOGOUT = \"LOGOUT\";\nexport const FETCH_ME_REQUEST = \"FETCH_ME_REQUEST\";\nexport const FETCH_ME_SUCCESS = \"FETCH_ME_SUCCESS\";\nexport const FETCH_ME_FAILURE = \"FETCH_ME_FAILURE\";\n\n// REDUCER\nconst initialState = {\n  userLoading: true,\n  userFailed: null,\n  user: {},\n  access_token: localStorage.getItem(\"access_token\"),\n  refresh_token: localStorage.getItem(\"refresh_token\"),\n  expires_in: localStorage.getItem(\"expires_in\"),\n  time_token_acquired: getCurrentTime()\n};\n\nexport default function (state = initialState, action) {\n  switch (action.type) {\n    case LOGIN:\n      // Store refresh and access token in localStorage\n      const { access_token, refresh_token, expires_in } = action.payload;\n\n      const currentTime = getCurrentTime();\n\n      localStorage.setItem(\"access_token\", access_token);\n      localStorage.setItem(\"refresh_token\", refresh_token);\n      localStorage.setItem(\"expires_in\", expires_in);\n      localStorage.setItem(\"time_token_acquired\", currentTime);\n\n      \n\n      return {\n        ...state,\n        access_token: access_token,\n        refresh_token: refresh_token,\n        expires_in: expires_in,\n        time_token_acquired: currentTime\n      };\n\n    case LOGOUT:\n      // Remove refresh and access token in localStorage\n      localStorage.removeItem(\"access_token\");\n      localStorage.removeItem(\"refresh_token\");\n      localStorage.removeItem(\"expires_in\");\n      localStorage.removeItem(\"current_user\");\n      localStorage.removeItem(\"time_token_acquired\");\n\n      return {\n        ...state,\n        user: {},\n        access_token: \"\",\n        refresh_token: \"\",\n        expires_in: 0,\n        time_token_acquired: \"\"\n      };\n\n    case FETCH_ME_REQUEST:\n      return {\n        ...state,\n        userLoading: true,\n        userFailed: false\n      };\n\n    case FETCH_ME_SUCCESS:\n      return {\n        ...state,\n        userLoading: false,\n        user: action.payload\n      };\n\n    case FETCH_ME_FAILURE:\n      return {\n        ...state,\n        userLoading: false,\n        userFailed: true\n      };\n\n    default:\n      return state;\n  }\n}\n\n// ACTION CREATORS\nexport function loginAction(payload) {\n  return {\n    type: LOGIN,\n    payload: payload\n  };\n}\n\nexport function logoutAction() {\n  return {\n    type: LOGOUT\n  };\n}\n\nexport function fetchMeRequestAction() {\n  return {\n    type: FETCH_ME_REQUEST\n  };\n}\n\nexport function fetchMeSuccessAction(userInfo) {\n  return {\n    type: FETCH_ME_SUCCESS,\n    payload: userInfo\n  };\n}\n\nexport function fetchMeFailureAction() {\n  return {\n    type: FETCH_ME_FAILURE\n  };\n}\n\n// OPERATIONS\nexport const authenticateLogin = (userData) => (dispatch) => {\n  var formdata = new FormData();\n  formdata.append(\"username\", userData.username);\n  formdata.append(\"password\", userData.password);\n  formdata.append(\"grant_type\", \"password\");\n\n  axios\n    .post(`${API_URL}/oauth/token`, formdata, {\n      headers: {\n        Authorization: `Basic ${btoa(\"my-client:my-secret\")}`\n      }\n    })\n    .then((res) => {\n      fetchMe(res.data.access_token)(dispatch);\n      dispatch(loginAction(res.data));\n    })\n    .catch((err) => {\n      displayError(\"Unable to login\")(dispatch);\n      dispatch(fetchMeFailureAction());\n    });\n};\n\nexport const refreshTokenLogin = () => (dispatch, getState) => {\n  var formdata = new FormData();\n  formdata.append(\"refresh_token\", getState().authReducer.refresh_token);\n  formdata.append(\"grant_type\", \"refresh_token\");\n\n  axios\n    .post(`${API_URL}/oauth/token`, formdata, {\n      headers: {\n        Authorization: `Basic ${btoa(\"my-client:my-secret\")}`\n      }\n    })\n    .then((res) => {\n      fetchMe(res.data.access_token)(dispatch);\n      dispatch(loginAction(res.data));\n    })\n    .catch((err) => {\n      displayError(\"Unable to login\")(dispatch);\n      dispatch(fetchMeFailureAction());\n    });\n};\n\nexport const logout = () => (dispatch, getState) => {\n  axios\n    .delete(`${API_URL}/oauth/revoke`, getTokenConfig(getState))\n    .then(() => {\n      dispatch(logoutAction());\n    })\n    .catch((err) => {\n      displayError(\"Unable to logout\")(dispatch);\n    });\n};\n\nexport const fetchMe = (access_token) => (dispatch) => {\n  dispatch(fetchMeRequestAction());\n\n  axios\n    .post(\n      `${API_URL}/users/me/`,\n      {},\n      {\n        headers: {\n          Authorization: `bearer ${access_token}`\n        }\n      }\n    )\n    .then((res) => {\n      dispatch(fetchMeSuccessAction(res.data));\n    })\n    .catch((err) => {\n      displayError(\"Unable to fetch current user information\")(dispatch);\n      dispatch(fetchMeFailureAction());\n    });\n};\n\n// SELECTORS\nexport const selectUserLoading = (state) =>\n  state.authReducer.userLoading === true;\nexport const selectUserFailed = (state) =>\n  state.authReducer.userLoading === false &&\n  state.authReducer.userFailed === true;\nexport const selectUser = (state) => state.authReducer.user;\n\nexport const selectRefreshToken = (state) => state.authReducer.refresh_token;\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\utils\\getCurrentTime.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\store.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\AppRouter.js",["160"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\rootReducer.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\UpdateUser.js",["161"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\systemadmin\\SystemAdmin.js",["162","163"],"import React, { Component } from \"react\";\nimport { Button } from \"@material-ui/core\";\nimport MaterialTable from 'material-table';\nimport { deleteUser, listUsers, createUser, updateUser } from \"../redux/ducks/users\";\nimport {\n  selectUsersLoading,\n  selectUsersFailed,\n  selectUsers\n} from \"../redux/ducks/users\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport Loader from 'react-loader-spinner';\nimport { forwardRef } from 'react';\n\nimport AddBox from '@material-ui/icons/AddBox';\nimport ArrowUpward from '@material-ui/icons/ArrowUpward';\nimport Check from '@material-ui/icons/Check';\nimport ChevronLeft from '@material-ui/icons/ChevronLeft';\nimport ChevronRight from '@material-ui/icons/ChevronRight';\nimport Clear from '@material-ui/icons/Clear';\nimport DeleteOutline from '@material-ui/icons/DeleteOutline';\nimport Edit from '@material-ui/icons/Edit';\nimport FilterList from '@material-ui/icons/FilterList';\nimport FirstPage from '@material-ui/icons/FirstPage';\nimport LastPage from '@material-ui/icons/LastPage';\nimport Remove from '@material-ui/icons/Remove';\nimport SaveAlt from '@material-ui/icons/SaveAlt';\nimport Search from '@material-ui/icons/Search';\nimport ViewColumn from '@material-ui/icons/ViewColumn';\nimport { AirlineSeatLegroomExtra } from \"@material-ui/icons\";\n\nclass SystemAdmin extends Component {\n\n  componentDidMount() {\n    this.props.listUsers();\n  }\n\n\n  render() {\n    const {\n      usersLoading,\n      users,\n      createUser,\n      updateUser,\n      deleteUser\n    } = this.props;\n\n\n\n\n    const tableIcons = {\n      Add: forwardRef((props, ref) => <AddBox {...props} ref={ref} />),\n      Check: forwardRef((props, ref) => <Check {...props} ref={ref} />),\n      Clear: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Delete: forwardRef((props, ref) => <DeleteOutline {...props} ref={ref} />),\n      DetailPanel: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      Edit: forwardRef((props, ref) => <Edit {...props} ref={ref} />),\n      Export: forwardRef((props, ref) => <SaveAlt {...props} ref={ref} />),\n      Filter: forwardRef((props, ref) => <FilterList {...props} ref={ref} />),\n      FirstPage: forwardRef((props, ref) => <FirstPage {...props} ref={ref} />),\n      LastPage: forwardRef((props, ref) => <LastPage {...props} ref={ref} />),\n      NextPage: forwardRef((props, ref) => <ChevronRight {...props} ref={ref} />),\n      PreviousPage: forwardRef((props, ref) => <ChevronLeft {...props} ref={ref} />),\n      ResetSearch: forwardRef((props, ref) => <Clear {...props} ref={ref} />),\n      Search: forwardRef((props, ref) => <Search {...props} ref={ref} />),\n      SortArrow: forwardRef((props, ref) => <ArrowUpward {...props} ref={ref} />),\n      ThirdStateCheck: forwardRef((props, ref) => <Remove {...props} ref={ref} />),\n      ViewColumn: forwardRef((props, ref) => <ViewColumn {...props} ref={ref} />)\n    };\n\n    if (usersLoading)\n      return <Loader />;\n\n    return (\n      <div className=\"container\" data-test=\"adminTable\" style={{ height: 400, width: '100%' }}>\n        <MaterialTable\n          title=\"Users\"\n          icons={tableIcons}\n          font=\"\"\n          columns={[\n\n            {\n              title: 'Email',\n              field: 'email',\n            }, \n            {\n              title: 'Name',\n              field: 'name',\n              \n            },\n            {\n              title: 'Password',\n              field: 'pass',\n\n            },\n            {\n              title: 'Role',\n              field: 'role',\n              lookup: {\n                ROLE_DOCTOR: \"ROLE_DOCTOR\",\n                ROLE_PATIENT: \"ROLE_PATIENT\",\n                ROLE_ADMIN: \"ROLE_ADMIN\",\n              },\n            },\n           {\n              title: 'Date of Birth',\n              field: 'dob',\n              type: \"date\",\n            },\n            {\n              title: 'Gender',\n              field: 'gender',\n              lookup: {\n                FEMALE: \"FEMALE\",\n                MALE: \"MALE\",\n              },\n            },\n          ]}\n          data={users}\n          options={{\n            \n            cellStyle: {\n              fontFamily: \"Helvetica\",\n              fontSize: 15,\n            },\n            headerStyle: {\n              backgroundColor: '#323ea8',\n              color: '#FFF',\n              fontSize: 17,\n            }}}\n          editable={{\n            onRowAdd: newData =>\n              new Promise((resolve, reject) => {\n                createUser(newData)\n                  .then(this.setState(users, () => resolve()))\n              }),\n            onRowUpdate: (newData, oldData) =>\n              new Promise((resolve, reject) => {\n                updateUser(newData, oldData)\n                  .then(this.setState(users, () => resolve()))\n              }),\n            onRowDelete: oldData =>\n              new Promise((resolve, reject) => {\n                deleteUser(oldData)\n                  .then(this.setState(users, () => resolve()))\n              }),\n          }}\n        />\n\n      </div>\n    )\n\n  }\n}\n\nSystemAdmin.propTypes = {\n  /** A boolean to determine if the users are still being loaded by the `listUsers` action creator (true: still loading, false: fully loaded) */\n  usersLoading: PropTypes.bool.isRequired,\n  /** A boolean to determine if the users failed to be loaded by the `listUsers` action creator (true: still loading or failed to load, false: successful load) */\n  usersFailed: PropTypes.bool,\n  /** An array of users objects loaded by the `listUsers` action creator */\n  users: PropTypes.array.isRequired,\n  /** An action creator for loading accounts from the server*/\n  listUsers: PropTypes.func.isRequired,\n  /** An action creator for creating a user account */\n  createUser: PropTypes.func.isRequired,\n  /** An action creator for deleting a user account */\n  deleteUser: PropTypes.func.isRequired,\n  /** An action creator for updating a user account*/\n  updateUser: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = (state) => ({\n  usersLoading: selectUsersLoading(state),\n  usersFailed: selectUsersFailed(state),\n  users: selectUsers(state)\n});\n\n\nconst dispatchers = {\n  createUser,\n  updateUser,\n  deleteUser,\n  listUsers,\n};\n\nexport default connect(mapStateToProps, dispatchers)(SystemAdmin);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\Main.js",["164","165"],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Game.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\util.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Control.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Score.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\lines\\line.js",["166"],"import React, { useRef, useEffect } from 'react';\nimport './line.css';\n\n \nconst App= (props) => {\n  const {valX , valY} = props ;\n  const canvas = useRef();\n  let ctx = null;\n \n  // initialize the canvas context\n  useEffect(() => {\n    // dynamically assign the width and height to canvas\n    const canvasEle = canvas.current;\n    canvasEle.width = canvasEle.clientWidth;\n    canvasEle.height = canvasEle.clientHeight;\n \n    // get context of the canvas\n    ctx = canvasEle.getContext(\"2d\");\n  });\n \n  useEffect(() => {\n    drawLine({ x: valX[0], y: valY[0], x1: valX[1], y1: valY[1] });\n    drawLine({  x: valX[1], y: valY[1], x1: valX[2], y1: valY[2] }, { color: 'black' });\n \n    drawLine({ x: valX[2], y: valY[2], x1: valX[3], y1: valY[3] });\n    drawLine({ x: valX[3], y: valY[3], x1: valX[4], y1: valY[4] });\n    drawLine({ x: valX[4], y: valY[4], x1: valX[5], y1: valY[5] });\n    drawLine({ x: valX[5], y: valY[5], x1: valX[6], y1: valY[6] });\n    drawLine({ x: valX[6], y: valY[6], x1: valX[7], y1: valY[7] });\n    drawLine({ x: valX[7], y: valY[7], x1: valX[8], y1: valY[8] });\n    drawLine({ x: valX[8], y: valY[8], x1: valX[9], y1: valY[9] });\n    drawLine({ x: valX[9], y: valY[9], x1: valX[10], y1: valY[10] });\n    drawLine({ x: valX[10], y: valY[10], x1: valX[11], y1: valY[11] });\n    drawLine({ x: valX[11], y: valY[11], x1: valX[12], y1: valY[12] });\n    drawLine({ x: valX[12], y: valY[12], x1: valX[13], y1: valY[13] });\n    drawLine({ x: valX[13], y: valY[13], x1: valX[14], y1: valY[14] });\n    drawLine({ x: valX[14], y: valY[14], x1: valX[15], y1: valY[15] });\n    drawLine({ x: valX[15], y: valY[15], x1: valX[16], y1: valY[16] });\n    drawLine({ x: valX[16], y: valY[16], x1: valX[17], y1: valY[17] });\n    drawLine({ x: valX[17], y: valY[17], x1: valX[18], y1: valY[18] });\n    drawLine({ x: valX[18], y: valY[18], x1: valX[19], y1: valY[19] });\n    drawLine({ x: valX[19], y: valY[19], x1: valX[20], y1: valY[20] });\n    drawLine({ x: valX[20], y: valY[20], x1: valX[21], y1: valY[21] });\n    drawLine({ x: valX[21], y: valY[21], x1: valX[22], y1: valY[22] });\n    drawLine({ x: valX[22], y: valY[22], x1: valX[23], y1: valY[23] });\n    drawLine({ x: valX[23], y: valY[23], x1: valX[24], y1: valY[24] });\n \n \n \n  });\n \n  // draw a line\n  const drawLine = (info, style = {}) => {\n    const { x, y, x1, y1 } = info;\n    const { color = 'black', width = 1 } = style;\n \n    ctx.beginPath();\n    ctx.moveTo(x, y);\n    ctx.lineTo(x1, y1);\n    ctx.strokeStyle = color;\n    ctx.lineWidth = width;\n    ctx.stroke();\n  }\n \n  return (\n    <div className=\"App\">\n     \n      <canvas ref={canvas}></canvas>\n    </div>\n  );\n}\n \nexport default App;","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\constants.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\game\\Dot.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\diagnosis.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\redux\\ducks\\result.js",[],"C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\ViewDiagnosisDoc.js",["167","168","169","170","171","172","173","174"],"import {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useRouteMatch,\n    useParams\n} from \"react-router-dom\";\nimport React, { Component } from \"react\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport \"./Diagnosis.css\";\nimport {fetchDiagnosis, selectDiagnosis, selectDiagnosisFailed, selectDiagnosisLoading} from \"../redux/ducks/diagnosis\";\nimport {deleteDiagnosis} from \"../redux/ducks/diagnosis\";\nimport { withRouter } from \"react-router-dom\";\nimport Moment from 'moment';\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { Button , Paper, Form, Typography } from \"@material-ui/core\";\n// const history = useHistory();\nclass ViewDiagnosisDoc extends Component {\n \n  \n  componentDidMount(){\n   this.props.fetchDiagnosis(this.state)\n   \n  }\n\n \n  deleteData = () =>{\n\n    this.props.deleteDiagnosis(this.props.diagnosis)\n   // this.forceUpdate();\n    //this.props.history.push(\"/viewDiagnosis\");\n   // window.location.reload();\n   window.location.reload(false);\n  \n  }\n\n\n  goPage = (page) => {\n    this.props.history.push(page);\n  }\n \n  render=()=>{\n\n  //   const role = getUser().role\n  //const role = fetchMe().role\n   //  let role= getUser.role;\n   //console.log(role);\n  // let isDoctor = role== \"ROLE_DOCTOR\";\n\n   // this.state=this.props.diagnosis;\n   \n    if(this.props.diagnosisLoading){\n      return(\n           <loader/>\n      )\n      }\n      else if(this.props.diagnosisFailed){\n        let isDoctor = true;\n        return(\n        \n          \n          <div className=\"wrapper\">\n                <h1>Diagnosis</h1>\n              \n                <form >\n                <Paper style={{ padding: 16 }}>\n                  \n                      <label>\n                          <p>CreatedBy : not available </p>\n                        \n                      </label>\n                      <label>\n                          <p>CreatedDate :not available </p>\n                        \n                      </label>\n                      <label>\n                          <p>Category :  not available   </p>\n                      </label>\n                      <label>\n                          <p>Comments :  not available  </p>\n                         \n                      </label>\n                      <label>\n                          <p>last modified by:not available  </p>\n                      \n                      </label>\n                      <label>\n                          <p>last modified date:not available </p>\n                       \n                      </label>\n                 \n                  </Paper>\n                </form>\n                <ul>\n                {isDoctor ? \n                <Button variant=\"contained\" color=\"primary\" onClick={() => this.goPage(\"/SubmitDiagnosis\")}>Submit New Diagnosis</Button>\n                : null}\n                </ul>\n              </div>\n                \n        )\n      }\n    \n   \n    else{\n     // let isDiagnosisExist =  this.props.diagnosis.id;\n    //  let isDiagnosisExist =  true;\n      let isDoctor = true;\n      console.log(this.props.diagnosis)\n     return (\n       \n         //    let match = useRouteMatch();\n        <Router>\n          \n          <div className=\"wrapper\">\n                <h1>Diagnosis</h1>\n              \n                <form >\n                <Paper style={{ padding: 16 }}>\n                  \n                      <label>\n                          <p>CreatedBy :  {this.props.diagnosis.createdBy}</p>\n                        \n                      </label>\n                      <label>\n                          <p>CreatedDate :{Moment(this.props.diagnosis.createdDate).format('DD-MM-YYYY')}</p>\n                        \n                      </label>\n                      <label>\n                          <p>Category :   {this.props.diagnosis.label}  </p>\n                      </label>\n                      <label>\n                          <p>Comments :   {this.props.diagnosis.description} </p>\n                         \n                      </label>\n                      <label>\n                          <p>last modified by:{this.props.diagnosis.lastModifiedBy} </p>\n                      \n                      </label>\n                      <label>\n                          <p>last modified date:{Moment(this.props.diagnosis.lastModifiedDate).format('DD-MM-YYYY')}</p>\n                       \n                      </label>\n                 \n                  </Paper>\n                </form>\n              </div>\n                  <div>\n            <ul>\n            {isDoctor ? \n            <div>\n                <div><Button variant=\"contained\" color=\"primary\" onClick={() => this.goPage(`/editDiagnosis/1`)}>edit Diagnosis</Button>\n                     <Button variant=\"contained\" color=\"primary\" onClick={() => this.deleteData()}> Delete</Button>\n                </div>\n                 \n            </div>\n            : null}\n            \n            </ul>\n         \n        </div>\n                    \n        </Router>\n   )}\n  }\n}\n\n\nViewDiagnosisDoc.propTypes = {\n \n  fetchDiagnosis: PropTypes.func.isRequired,\n  deleteDiagnosis: PropTypes.func.isRequired,\n  diagnosisLoading:PropTypes.bool.isRequired,\n  diagnosisFailed:PropTypes.bool,\n  diagnosis:PropTypes.object.isRequired,\n\n};\n\n\nconst mapStateToProps = (state) =>({\n    diagnosisLoading:selectDiagnosisLoading(state),\n    diagnosisFailed:selectDiagnosisFailed(state),\n    diagnosis:selectDiagnosis(state),\n\n});\n\nconst dispatchers = {\n  fetchDiagnosis,\n  deleteDiagnosis\n};\n\nexport default withRouter(connect(mapStateToProps, dispatchers)(ViewDiagnosisDoc));\n//export default connect(mapStateToProps, dispatchers)(ViewDiagnosisDoc);\n\n//export default withRouter(connect(() => ({}), dispatchers)(ViewDiagnosisDoc));\n\n // constructor(props) {\n  //   super(props);\n  //   this.state = {\n  //     // id: this.props.match.params.id,\n  //     //username: null,\n  //    id :null,\n  //     createdBy : null,\n  //     createdDate : null,\n  //     lastModifiedBy : null,\n  //     lastModifiedDate : null,\n  //     doctor : null,\n  //     label : null,\n  //     description : null\n      \n  //   };\n  \n    \n    \n  // }\n\n// this.props.fetchDiagnosis(this.state).then(resp =>{\n//   if(resp){\n//     //console.log(resp)\n//     let data = resp.data;\n//     this.setState({\n      \n//       id:data.id,\n//       createdBy: data['createdBy'],\n//       createdDate: Moment(data['createdDate']).format('DD-MM-YYYY'),\n//       lastModifiedBy: data['lastModifiedBy'],\n//       lastModifiedDate: Moment(data['lastModifiedDate']).format('DD-MM-YYYY'),\n//       doctor: data['doctor'],\n//       label: data['label'],\n//       description: data['description'], \n\n//   });\n//   this.forceUpdate();\n \n//   }else {\n//    // this.forceUpdate();\n   \n//     this.setState({\n//       id:null,\n//       createdBy: \"not available \" ,\n//       createdDate: \"not available \",\n//       lastModifiedBy: \"not available \",\n//       lastModifiedDate: \"not available \",\n//       doctor: \"not available \",\n//       label: \"not available \",\n//       description: \"not available \", \n//   });\n//   this.forceUpdate();\n//   }\n//  // this.forceUpdate();\n  \n// }) \n\n// {!isDiagnosisExist ?\n//   <Button variant=\"contained\" color=\"primary\" onClick={() => this.goPage(\"/SubmitDiagnosis\")}>Submit New Diagnosis</Button>\n//  :null}\n","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\editDiagnosis.js",["175","176","177"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { updateDiagnosis } from \"../redux/ducks/diagnosis\";\nimport { Button, Select, Paper, Container } from \"@material-ui/core\";\n//import { Link } from \"react-router-dom\";\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\nimport \"./Diagnosis.css\";\nclass editDiagnosis extends Component {\n  constructor(props) {\n    super(props);\n\n    var today = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n\n    this.state = {\n      id: this.props.match.params.id,\n      //username: null,\n     // id : 1,\n      //id:null,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      result : null,\n      doctor : null,\n      label : null,\n      description : null\n      \n    };\n  }\n\n  validateForm() {\n    if (\n      this.state.label == null ||\n      this.state.description == null \n\n    )\n      return false;\n    else\n      return (\n        this.state.label.length > 0 &&\n        this.state.description.length > 0 \n    \n      );\n  }\n\n  updateData = () => {\n    \n    let doctor = localStorage.getItem(\"doctor\");\n    console.log(this.state);\n\n    this.props.updateDiagnosis(this.state);\n    this.props.history.push(\"/viewDiagnosis\");\n      \n  }\n\n  handleInputChange = input => e => {\n    this.setState({[input]: e.target.value})\n  }\n\n  render(){\n    return(\n    <div className=\"wrapper\">\n      <h1>Diagnosis</h1>\n     \n        <Paper style={{ padding: 16 }}> \n           \n\n            <label>\n                <p>Category : </p>\n                <Select name=\"label\"  onChange={this.handleInputChange(\"label\")}>\n                    <option value=\"\">--Please choose an option--</option>\n                    <option value=\"moderate\">moderate</option>\n                    <option value=\"High\">High</option>\n                    <option value=\"Low\">Low</option>\n                </Select>\n            </label>\n            <label>\n                <p>Comments :</p>\n                <textarea name=\"description\"  onChange={this.handleInputChange(\"description\")} />\n            </label>\n        </Paper>\n        <p>\n          <Button variant=\"contained\" color=\"primary\" disabled={!this.validateForm()} onClick={() => this.updateData()}>Submit</Button>\n        </p>\n    </div>\n  );\n}\n}\neditDiagnosis.propTypes = {\n  /** An action creator for authenticating login */\n  updateDiagnosis: PropTypes.func.isRequired\n};\n\nconst dispatchers = {\n  updateDiagnosis\n};\n\nexport default connect(() => ({}), dispatchers)(editDiagnosis);","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\viewDiagnosis\\SubmitDiagnosis.js",["178","179"],"import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { connect } from \"react-redux\";\nimport { createDiagnosis } from \"../redux/ducks/diagnosis\";\n\nimport { Button, Select, Paper, Container } from \"@material-ui/core\";\n//import { Link } from \"react-router-dom\";\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\nimport \"./Diagnosis.css\";\nclass SubmitDiagnosis extends Component {\n  constructor(props) {\n    super(props);\n    var today = new Date(),\n    date = today.getFullYear() + '-' + (today.getMonth() + 1) + '-' + today.getDate();\n    this.state = {\n     // id: this.props.match.params.id,\n      //username: null,\n      id : null,\n      createdBy : null,\n      createdDate : null,\n      lastModifiedBy : null,\n      lastModifiedDate : null,\n      resultId : this.props.match.params.resultId,\n      doctor : null,\n      label : null,\n      description : null\n      \n    };\n\n    this.handleInputChange = this.handleInputChange.bind(this);\n    this.handleSubmit = this.handleSubmit.bind(this);\n  }\n\n  validateForm() {\n    if (\n      this.state.label == null ||\n      this.state.description == null \n\n    )\n      return false;\n    //initialisation\n    else\n      return (\n        this.state.label.length > 0 &&\n        this.state.description.length > 0 \n    \n      );\n  }\n\n  handleInputChange(event) {\n    this.setState({\n      ...this.state,\n      ...{\n        [event.target.name]: event.target.value,\n      },\n    });\n  }\n\n  handleSubmit(event) {\n    console.log(\"form was submitted\");\n    event.preventDefault();\n    let doctor = localStorage.getItem(\"doctor\");\n    this.setState({\n      doctor:doctor,\n      createdDate:new Date(),\n      createdBy:doctor\n    })\n    console.log(this.state);\n\n    this.props.createDiagnosis(this.state);\n    this.props.history.push(\"/viewDiagnosis\");\n    window.location.reload(false);\n   \n  }\n\n  render(){\n    return(\n    <div className=\"wrapper\">\n      <h1>Diagnosis</h1>\n     \n      <form onSubmit={this.handleSubmit}>\n        <Paper style={{ padding: 16 }}>\n              <label>\n                  <p>Category : </p>\n                  <Select  name=\"label\"  onChange={this.handleInputChange}>\n                      <option value=\"\">--Please choose an option--</option>\n                      <option value=\"moderate\">moderate</option>\n                      <option value=\"High\">High</option>\n                      <option value=\"Low\">Low</option>\n                  </Select>\n              </label>\n              <label>\n                  <p>Comments :</p>\n                  <textarea name=\"description\"  onChange={this.handleInputChange} />\n              </label>\n        \n        </Paper>\n        <p>\n          <Button variant=\"contained\" color=\"primary\" type=\"submit\"  disabled={!this.validateForm()}>Submit</Button>\n        </p>\n      </form>\n    </div>\n  );\n}\n}\nSubmitDiagnosis.propTypes = {\n  /** An action creator for authenticating login */\n  createDiagnosis: PropTypes.func.isRequired\n};\n\nconst dispatchers = {\n  createDiagnosis\n};\n\nexport default connect(() => ({}), dispatchers)(SubmitDiagnosis);\n//export default SubmitDiagnosis;\n//https://www.digitalocean.com/community/tutorials/how-to-build-forms-in-react#prerequisites","C:\\Users\\c455i\\Desktop\\CZ3002 Lab\\cz3002-fe-1\\src\\login\\Logout.js",["180","181","182","183","184"],{"ruleId":"185","replacedBy":"186"},{"ruleId":"187","replacedBy":"188"},{"ruleId":"189","severity":1,"message":"190","line":6,"column":3,"nodeType":"191","messageId":"192","endLine":6,"endColumn":20},{"ruleId":"189","severity":1,"message":"193","line":7,"column":3,"nodeType":"191","messageId":"192","endLine":7,"endColumn":19},{"ruleId":"189","severity":1,"message":"194","line":10,"column":10,"nodeType":"191","messageId":"192","endLine":10,"endColumn":18},{"ruleId":"189","severity":1,"message":"195","line":44,"column":15,"nodeType":"191","messageId":"192","endLine":44,"endColumn":23},{"ruleId":"189","severity":1,"message":"196","line":44,"column":25,"nodeType":"191","messageId":"192","endLine":44,"endColumn":33},{"ruleId":"189","severity":1,"message":"197","line":127,"column":7,"nodeType":"191","messageId":"192","endLine":127,"endColumn":15},{"ruleId":"198","severity":1,"message":"199","line":10,"column":1,"nodeType":"200","endLine":35,"endColumn":2},{"ruleId":"198","severity":1,"message":"199","line":25,"column":1,"nodeType":"200","endLine":89,"endColumn":2},{"ruleId":"189","severity":1,"message":"201","line":4,"column":19,"nodeType":"191","messageId":"192","endLine":4,"endColumn":30},{"ruleId":"189","severity":1,"message":"202","line":48,"column":9,"nodeType":"191","messageId":"192","endLine":48,"endColumn":13},{"ruleId":"189","severity":1,"message":"203","line":2,"column":10,"nodeType":"191","messageId":"192","endLine":2,"endColumn":16},{"ruleId":"189","severity":1,"message":"204","line":30,"column":10,"nodeType":"191","messageId":"192","endLine":30,"endColumn":33},{"ruleId":"189","severity":1,"message":"205","line":7,"column":10,"nodeType":"191","messageId":"192","endLine":7,"endColumn":20},{"ruleId":"189","severity":1,"message":"206","line":10,"column":3,"nodeType":"191","messageId":"192","endLine":10,"endColumn":10},{"ruleId":"207","severity":1,"message":"208","line":18,"column":11,"nodeType":"209","endLine":18,"endColumn":37},{"ruleId":"189","severity":1,"message":"210","line":3,"column":5,"nodeType":"191","messageId":"192","endLine":3,"endColumn":11},{"ruleId":"189","severity":1,"message":"211","line":4,"column":5,"nodeType":"191","messageId":"192","endLine":4,"endColumn":10},{"ruleId":"189","severity":1,"message":"212","line":5,"column":5,"nodeType":"191","messageId":"192","endLine":5,"endColumn":9},{"ruleId":"189","severity":1,"message":"213","line":6,"column":5,"nodeType":"191","messageId":"192","endLine":6,"endColumn":18},{"ruleId":"189","severity":1,"message":"214","line":7,"column":5,"nodeType":"191","messageId":"192","endLine":7,"endColumn":14},{"ruleId":"189","severity":1,"message":"215","line":10,"column":18,"nodeType":"191","messageId":"192","endLine":10,"endColumn":28},{"ruleId":"189","severity":1,"message":"216","line":18,"column":26,"nodeType":"191","messageId":"192","endLine":18,"endColumn":30},{"ruleId":"189","severity":1,"message":"217","line":18,"column":32,"nodeType":"191","messageId":"192","endLine":18,"endColumn":42},{"ruleId":"189","severity":1,"message":"218","line":5,"column":33,"nodeType":"191","messageId":"192","endLine":5,"endColumn":42},{"ruleId":"189","severity":1,"message":"219","line":14,"column":5,"nodeType":"191","messageId":"192","endLine":14,"endColumn":9},{"ruleId":"189","severity":1,"message":"220","line":50,"column":9,"nodeType":"191","messageId":"192","endLine":50,"endColumn":15},{"ruleId":"189","severity":1,"message":"218","line":6,"column":33,"nodeType":"191","messageId":"192","endLine":6,"endColumn":42},{"ruleId":"189","severity":1,"message":"219","line":14,"column":5,"nodeType":"191","messageId":"192","endLine":14,"endColumn":9},{"ruleId":"189","severity":1,"message":"221","line":3,"column":31,"nodeType":"191","messageId":"192","endLine":3,"endColumn":40},{"ruleId":"189","severity":1,"message":"222","line":5,"column":27,"nodeType":"191","messageId":"192","endLine":5,"endColumn":33},{"ruleId":"189","severity":1,"message":"211","line":5,"column":35,"nodeType":"191","messageId":"192","endLine":5,"endColumn":40},{"ruleId":"189","severity":1,"message":"210","line":5,"column":42,"nodeType":"191","messageId":"192","endLine":5,"endColumn":48},{"ruleId":"189","severity":1,"message":"215","line":5,"column":58,"nodeType":"191","messageId":"192","endLine":5,"endColumn":68},"no-native-reassign",["223"],"no-negated-in-lhs",["224"],"no-unused-vars","'selectUserLoading' is defined but never used.","Identifier","unusedVar","'selectUserFailed' is defined but never used.","'Redirect' is defined but never used.","'username' is assigned a value but never used.","'password' is assigned a value but never used.","'dispatch' is assigned a value but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'useSelector' is defined but never used.","'role' is assigned a value but never used.","'Button' is defined but never used.","'AirlineSeatLegroomExtra' is defined but never used.","'withStyles' is defined but never used.","'fetchMe' is defined but never used.","react-hooks/exhaustive-deps","Assignments to the 'ctx' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","CallExpression","'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'useParams' is defined but never used.","'RouterLink' is defined but never used.","'Form' is defined but never used.","'Typography' is defined but never used.","'Container' is defined but never used.","'date' is assigned a value but never used.","'doctor' is assigned a value but never used.","'TextField' is defined but never used.","'Router' is defined but never used.","no-global-assign","no-unsafe-negation"]