[{"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\index.js":"1","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\App.js":"2","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\ResultController.jsx":"3","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\login\\Login.js":"4","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\ResultList.jsx":"5","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\DoctorResult.jsx":"6","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\ResultDetails.jsx":"7","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\users.js":"8","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\PatientResult.jsx":"9","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\apiHelper.js":"10","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\errors.js":"11","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\authHelper.js":"12","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\utils\\constants.js":"13","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\diagnosis.js":"14","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\viewDiagnosis\\SubmitDiagnosis.js":"15","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\result.js":"16","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\store.js":"17","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\rootReducer.js":"18","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\auth.js":"19","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\utils\\getCurrentTime.js":"20","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\systemadmin\\NewAccount.js":"21","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\viewDiagnosis\\ViewDiagnosisDoc.js":"22","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\viewDiagnosis\\editDiagnosis.js":"23"},{"size":149,"mtime":1613387136235,"results":"24","hashOfConfig":"25"},{"size":3606,"mtime":1614931860313,"results":"26","hashOfConfig":"25"},{"size":1388,"mtime":1613407308825,"results":"27","hashOfConfig":"25"},{"size":2037,"mtime":1614628343184,"results":"28","hashOfConfig":"25"},{"size":1010,"mtime":1613325606064,"results":"29","hashOfConfig":"25"},{"size":870,"mtime":1613325606062,"results":"30","hashOfConfig":"25"},{"size":851,"mtime":1613325606064,"results":"31","hashOfConfig":"25"},{"size":3083,"mtime":1614626213770,"results":"32","hashOfConfig":"25"},{"size":356,"mtime":1613325606063,"results":"33","hashOfConfig":"25"},{"size":3456,"mtime":1614627191095,"results":"34","hashOfConfig":"25"},{"size":1503,"mtime":1614626213768,"results":"35","hashOfConfig":"25"},{"size":336,"mtime":1614626213766,"results":"36","hashOfConfig":"25"},{"size":314,"mtime":1614755048391,"results":"37","hashOfConfig":"25"},{"size":2788,"mtime":1614860885616,"results":"38","hashOfConfig":"25"},{"size":3079,"mtime":1614931980936,"results":"39","hashOfConfig":"25"},{"size":3749,"mtime":1614756712043,"results":"40","hashOfConfig":"25"},{"size":354,"mtime":1614626213772,"results":"41","hashOfConfig":"25"},{"size":400,"mtime":1614626213771,"results":"42","hashOfConfig":"25"},{"size":5423,"mtime":1614626213766,"results":"43","hashOfConfig":"25"},{"size":286,"mtime":1614626213774,"results":"44","hashOfConfig":"25"},{"size":5041,"mtime":1614769592613,"results":"45","hashOfConfig":"25"},{"size":4497,"mtime":1614932001051,"results":"46","hashOfConfig":"25"},{"size":2695,"mtime":1614860497360,"results":"47","hashOfConfig":"25"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},"1s8m0tu",{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"50"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"50"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"50"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"82","usedDeprecatedRules":"50"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"50"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"94"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"50"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"50"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"102","usedDeprecatedRules":"50"},"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\index.js",[],["103","104"],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\App.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\ResultController.jsx",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\login\\Login.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\ResultList.jsx",["105","106"],"import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport ResultDetails from './ResultDetails.jsx'\r\n\r\nexport default function ResultList(props){\r\n    // receives resultHistory - list of past test performances,\r\n    // which includes as attributes: time, test mode, completion time, error rate\r\n    let match = useRouteMatch();\r\n    return (\r\n        <div>\r\n            <ul>\r\n                {props.resultHistory.map(\r\n                    (resultDetails) => \r\n                    <Link key={resultDetails.id.toString()} to={`${match.url}/resultDetails/${resultDetails.id}`}>\r\n                        <li>Test id: {resultDetails.id}</li>\r\n                    </Link>\r\n                )}\r\n            </ul>\r\n            <Switch>\r\n                <Route path={`${match.path}/resultDetails/:resultDetailsId`} children={<ResultDetails resultHistory={props.resultHistory}/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}\r\n","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\DoctorResult.jsx",["107","108"],"import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\n\r\nimport PatientResult from './PatientResult'\r\nexport default function DoctorResult(props){\r\n    let match = useRouteMatch();\r\n    return (\r\n        \r\n        <div>\r\n            <ul>\r\n                {props.patientList.map(\r\n                    (patientDetails) => \r\n                    <Link key={patientDetails.id.toString()} to={`${match.url}/patientDetails/${patientDetails.id}`}>\r\n                        <li>Patient id: {patientDetails.id}</li>\r\n                    </Link>\r\n                )}\r\n            </ul>\r\n            <Switch>\r\n                <Route path={`${match.path}/patientDetails/:patientDetailsId`} children={<PatientResult patientList={props.patientList}/>}/>\r\n            </Switch>\r\n        </div>\r\n    )\r\n}","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\ResultDetails.jsx",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\users.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\results\\PatientResult.jsx",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\apiHelper.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\errors.js",["109"],"// ACTION TYPES\r\nconst ERROR_DISPLAY = 'ERROR_DISPLAY';\r\nconst ERROR_CLOSE = 'ERROR_CLOSE';\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  errors: [],\r\n};\r\n\r\nexport default function(state = initialState, action) {\r\n  switch (action.type) {\r\n    case ERROR_DISPLAY:\r\n      return {\r\n        ...state,\r\n        errors: [...state.errors, action.payload],\r\n      }\r\n\r\n    case ERROR_CLOSE:\r\n      return {\r\n        ...state,\r\n        errors: state.errors.map(error => {\r\n          if (error.id === action.payload)\r\n            return {\r\n              ...error,\r\n              isVisible: false,\r\n            };\r\n          else\r\n            return error;\r\n        }),\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\n// ACTION CREATORS\r\nfunction displayErrorAction(error) {\r\n  // Generate unique ID\r\n  return {\r\n    type: ERROR_DISPLAY,\r\n    payload: error,\r\n  }\r\n}\r\n\r\nfunction closeErrorAction(id) {\r\n  return {\r\n    type: ERROR_CLOSE,\r\n    payload: id,\r\n  }\r\n}\r\n\r\n// OPERATIONS\r\nexport const displayError = errorMessage => dispatch => {\r\n  const uid = Date.now().toString(36) + Math.random().toString(36).substr(2);\r\n\r\n  dispatch(displayErrorAction({\r\n    id: uid,\r\n    message: errorMessage,\r\n    isVisible: true,\r\n  }));\r\n\r\n  // Dismiss error alert after 3 seconds\r\n  setTimeout(() => {\r\n    dispatch(closeErrorAction(uid));\r\n  }, 3000);\r\n};\r\n\r\nexport const closeError = id => dispatch => dispatch(closeErrorAction(id));\r\n\r\n// SELECTORS\r\nexport const selectErrors = state => state.errorsReducer.errors;","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\authHelper.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\utils\\constants.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\diagnosis.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\viewDiagnosis\\SubmitDiagnosis.js",["110","111","112","113"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { createDiagnosis } from \"../redux/ducks/diagnosis\";\r\nimport { Button, CssBaseline, TextField, Container } from \"@material-ui/core\";\r\n//import { Link } from \"react-router-dom\";\r\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\r\nimport \"./Diagnosis.css\";\r\nclass SubmitDiagnosis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      // id: this.props.match.params.id,\r\n      //username: null,\r\n      id : 0,\r\n      createdBy : null,\r\n      createdDate : null,\r\n      lastModifiedBy : null,\r\n      lastModifiedDate : null,\r\n      resultId : this.props.match.params.resultId,\r\n      doctor : null,\r\n      label : null,\r\n      description : null\r\n      \r\n    };\r\n\r\n    this.handleInputChange = this.handleInputChange.bind(this);\r\n    this.handleSubmit = this.handleSubmit.bind(this);\r\n  }\r\n\r\n  validateForm() {\r\n    if (\r\n      this.state.label == null ||\r\n      this.state.description == null \r\n\r\n    )\r\n      return false;\r\n    //initialisation\r\n    else\r\n      return (\r\n        this.state.label.length > 0 &&\r\n        this.state.description.length > 0 \r\n    \r\n      );\r\n  }\r\n\r\n  handleInputChange(event) {\r\n    this.setState({\r\n      ...this.state,\r\n      ...{\r\n        [event.target.name]: event.target.value,\r\n      },\r\n    });\r\n  }\r\n\r\n  handleSubmit(event) {\r\n    console.log(\"form was submitted\");\r\n    event.preventDefault();\r\n    let doctor = localStorage.getItem(\"doctor\");\r\n    this.setState({\r\n      doctor:doctor,\r\n      createdDate:new Date(),\r\n      createdBy:doctor\r\n    })\r\n    console.log(this.state);\r\n\r\n    this.props.createDiagnosis(this.state);\r\n    this.props.history.push(\"/ViewDiagnosisDoc\");\r\n   \r\n  }\r\n\r\n  render(){\r\n    return(\r\n    <div className=\"wrapper\">\r\n      <h1>Diagnosis</h1>\r\n     \r\n      <form onSubmit={this.handleSubmit}>\r\n        <fieldset>\r\n           \r\n\r\n            <label>\r\n                <p>Category : </p>\r\n                <select name=\"label\"  onChange={this.handleInputChange}>\r\n                    <option value=\"\">--Please choose an option--</option>\r\n                    <option value=\"moderate\">moderate</option>\r\n                    <option value=\"High\">High</option>\r\n                    <option value=\"Low\">Low</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                <p>Comments :</p>\r\n                <textarea name=\"description\"  onChange={this.handleInputChange} />\r\n            </label>\r\n        </fieldset>\r\n       <button type=\"submit\"  disabled={!this.validateForm()}>Submit</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n}\r\nSubmitDiagnosis.propTypes = {\r\n  /** An action creator for authenticating login */\r\n  createDiagnosis: PropTypes.func.isRequired\r\n};\r\n\r\nconst dispatchers = {\r\n  createDiagnosis\r\n};\r\n\r\nexport default connect(() => ({}), dispatchers)(SubmitDiagnosis);\r\n//export default SubmitDiagnosis;\r\n//https://www.digitalocean.com/community/tutorials/how-to-build-forms-in-react#prerequisites","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\result.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\store.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\rootReducer.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\redux\\ducks\\auth.js",["114"],"import { API_URL } from \"../../utils/constants\";\r\nimport axios from 'axios';\r\nimport { displayError } from './errors';\r\nimport { getCurrentTime } from '../../utils/getCurrentTime';\r\nimport { getTokenConfig } from \"./authHelper\";\r\n\r\n// ACTION TYPES\r\nexport const LOGIN = 'LOGIN';\r\nexport const LOGOUT = 'LOGOUT';\r\nexport const FETCH_ME_REQUEST = 'FETCH_ME_REQUEST';\r\nexport const FETCH_ME_SUCCESS = 'FETCH_ME_SUCCESS';\r\nexport const FETCH_ME_FAILURE = 'FETCH_ME_FAILURE';\r\n\r\n// REDUCER\r\nconst initialState = {\r\n  userLoading: true,\r\n  userFailed: null,\r\n  user: {},\r\n  access_token: localStorage.getItem(\"access_token\"),\r\n  refresh_token: localStorage.getItem(\"refresh_token\"),\r\n  expires_in: localStorage.getItem(\"expires_in\"),\r\n  time_token_acquired: getCurrentTime(),\r\n};\r\n\r\nexport default function (state = initialState, action) {\r\n  switch (action.type) {\r\n    case LOGIN:\r\n      // Store refresh and access token in localStorage\r\n      const {\r\n        access_token,\r\n        refresh_token,\r\n        expires_in,\r\n      } = action.payload;\r\n\r\n      const currentTime = getCurrentTime()\r\n\r\n      localStorage.setItem(\"access_token\", access_token);\r\n      localStorage.setItem(\"refresh_token\", refresh_token);\r\n      localStorage.setItem(\"expires_in\", expires_in);\r\n      localStorage.setItem(\"time_token_acquired\", currentTime);\r\n\r\n      return {\r\n        ...state,\r\n        access_token: access_token,\r\n        refresh_token: refresh_token,\r\n        expires_in: expires_in,\r\n        time_token_acquired: currentTime,\r\n      }\r\n\r\n    case LOGOUT:\r\n      // Remove refresh and access token in localStorage\r\n      localStorage.removeItem(\"access_token\");\r\n      localStorage.removeItem(\"refresh_token\");\r\n      localStorage.removeItem(\"expires_in\");\r\n      localStorage.removeItem(\"current_user\");\r\n      localStorage.removeItem(\"time_token_acquired\");\r\n\r\n      return {\r\n        ...state,\r\n        user: {},\r\n        access_token: '',\r\n        refresh_token: '',\r\n        expires_in: 0,\r\n        time_token_acquired: ''\r\n      }\r\n\r\n    case FETCH_ME_REQUEST:\r\n      return {\r\n        ...state,\r\n        userLoading: true,\r\n        userFailed: false,\r\n      }\r\n\r\n    case FETCH_ME_SUCCESS:\r\n      return {\r\n        ...state,\r\n        userLoading: false,\r\n        user: action.payload,\r\n      }\r\n\r\n    case FETCH_ME_FAILURE:\r\n      return {\r\n        ...state,\r\n        userLoading: false,\r\n        userFailed: true,\r\n      }\r\n\r\n    default:\r\n      return state;\r\n  }\r\n\r\n}\r\n\r\n// ACTION CREATORS\r\nexport function loginAction(payload) {\r\n  return {\r\n    type: LOGIN,\r\n    payload: payload,\r\n  }\r\n}\r\n\r\nexport function logoutAction() {\r\n  return {\r\n    type: LOGOUT,\r\n  }\r\n}\r\n\r\nexport function fetchMeRequestAction() {\r\n  return {\r\n    type: FETCH_ME_REQUEST,\r\n  }\r\n}\r\n\r\nexport function fetchMeSuccessAction(userInfo) {\r\n  return {\r\n    type: FETCH_ME_SUCCESS,\r\n    payload: userInfo\r\n  }\r\n}\r\n\r\nexport function fetchMeFailureAction() {\r\n  return {\r\n    type: FETCH_ME_FAILURE,\r\n  }\r\n}\r\n\r\n// OPERATIONS\r\nexport const authenticateLogin = userData => dispatch => {\r\n  var formdata = new FormData();\r\n  formdata.append(\"username\", userData.username);\r\n  formdata.append(\"password\", userData.password);\r\n  formdata.append(\"grant_type\", \"password\");\r\n\r\n  axios\r\n  .post(\r\n      `${API_URL}/oauth/token`,\r\n      formdata,\r\n      {\r\n        headers: {\r\n          'Authorization': `Basic ${btoa('my-client:my-secret')}`\r\n        }\r\n      },\r\n  )\r\n  .then(res => {\r\n    fetchMe(res.data.access_token)(dispatch);\r\n    dispatch(loginAction(res.data));\r\n  })\r\n  .catch(err => {\r\n    displayError(\"Unable to login\")(dispatch);\r\n    dispatch(fetchMeFailureAction());\r\n  });\r\n};\r\n\r\nexport const refreshTokenLogin = () => (dispatch, getState) => {\r\n  var formdata = new FormData();\r\n  formdata.append(\"refresh_token\", getState().authReducer.refresh_token);\r\n  formdata.append(\"grant_type\", \"refresh_token\");\r\n\r\n  axios\r\n  .post(\r\n      `${API_URL}/oauth/token`,\r\n      formdata,\r\n      {\r\n        headers: {\r\n          'Authorization': `Basic ${btoa('my-client:my-secret')}`\r\n        }\r\n      },\r\n  )\r\n  .then(res => {\r\n    fetchMe(res.data.access_token)(dispatch);\r\n    dispatch(loginAction(res.data));\r\n  })\r\n  .catch(err => {\r\n    displayError(\"Unable to login\")(dispatch);\r\n    dispatch(fetchMeFailureAction());\r\n  });\r\n};\r\n\r\nexport const logout = () => (dispatch, getState) => {\r\n  axios\r\n  .delete(\r\n      `${API_URL}/oauth/revoke`,\r\n      getTokenConfig(getState)\r\n  )\r\n  .then(() => {\r\n    dispatch(logoutAction());\r\n  })\r\n  .catch(err => {\r\n    displayError(\"Unable to logout\")(dispatch);\r\n  });\r\n};\r\n\r\nexport const fetchMe = access_token => dispatch => {\r\n  dispatch(fetchMeRequestAction());\r\n\r\n  axios\r\n  .post(\r\n      `${API_URL}/users/me/`,\r\n      {},\r\n      {\r\n        headers: {\r\n          Authorization: `bearer ${access_token}`\r\n        }\r\n      },\r\n  )\r\n  .then(res => {\r\n    dispatch(fetchMeSuccessAction(res.data));\r\n  })\r\n  .catch(err => {\r\n    displayError(\"Unable to fetch current user information\")(dispatch);\r\n    dispatch(fetchMeFailureAction());\r\n  });\r\n};\r\n\r\n// SELECTORS\r\nexport const selectUserLoading = state => state.authReducer.userLoading === true;\r\nexport const selectUserFailed = state => state.authReducer.userLoading === false && state.authReducer.userFailed === true;\r\nexport const selectUser = state => state.authReducer.user;\r\n\r\nexport const selectRefreshToken = state => state.authReducer.refresh_token;","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\utils\\getCurrentTime.js",[],["115","116"],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\systemadmin\\NewAccount.js",[],"C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\viewDiagnosis\\ViewDiagnosisDoc.js",["117","118","119","120","121","122","123"],"import {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useRouteMatch,\r\n    useParams\r\n} from \"react-router-dom\";\r\nimport React, { Component } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link as RouterLink } from \"react-router-dom\";\r\nimport \"./Diagnosis.css\";\r\nimport {fetchDiagnosis} from \"../redux/ducks/diagnosis\";\r\nimport {deleteDiagnosis} from \"../redux/ducks/diagnosis\";\r\nimport { withRouter } from \"react-router-dom\";\r\n\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\n// const history = useHistory();\r\nclass ViewDiagnosisDoc extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      // id: this.props.match.params.id,\r\n      //username: null,\r\n    \r\n      createdBy : null,\r\n      createdDate : null,\r\n      lastModifiedBy : null,\r\n      lastModifiedDate : null,\r\n      doctor : null,\r\n      label : null,\r\n      description : null\r\n      \r\n    };\r\n  \r\n    \r\n    \r\n  }\r\n  \r\n  componentDidMount(){\r\n    this.props.fetchDiagnosis(this.state).then(data =>{\r\n      if(data){\r\n        this.setState({\r\n          id:data.id,\r\n          createdBy: data['createdBy'],\r\n        createdDate: data['createdDate'],\r\n        lastModifiedBy: data['lastModifiedBy'],\r\n        lastModifiedDate: data['lastModifiedDate'],\r\n        doctor: data['doctor'],\r\n        label: data['label'],\r\n        description: data['description'], \r\n      });\r\n      }else {\r\n        this.setState({id:2,\r\n          createdBy: 0,\r\n        createdDate: 0,\r\n        lastModifiedBy: 0,\r\n        lastModifiedDate: 0,\r\n        doctor: 0,\r\n        label: 0,\r\n        description: 0, \r\n      });\r\n      this.forceUpdate();\r\n      }\r\n     \r\n    }) //disable button for edit if user logs in ,disable submit if there exits data , if no data display no data found (edit form).\r\n  }\r\n\r\n  deleteData = () =>{\r\n\r\n    this.props.deleteDiagnosis(this.state)\r\n    this.props.history.push(\"/ViewDiagnosisDoc\");\r\n\r\n  }\r\n  goPage = (page) => {\r\n    this.props.history.push(page);\r\n  }\r\n\r\n \r\n  render() {\r\n\r\n     console.log(this.state);\r\n    //  let isDoctor = localStorage.getItem(\"role\") == \"doctor\";\r\n    let isDoctor = true;\r\n     return (\r\n         //    let match = useRouteMatch();\r\n        <Router>\r\n          <div className=\"wrapper\">\r\n                <h1>Diagnosis</h1>\r\n              \r\n                <form>\r\n                  <fieldset>\r\n                      <label>\r\n                          <p>CreatedBy:</p>\r\n                          <div>{this.state.createdBy}</div>\r\n                      </label>\r\n                      <label>\r\n                          <p>Date:</p>\r\n                          <div >{this.state.createdDate}</div>\r\n                      </label>\r\n                      <label>\r\n                          <p>Category : </p>\r\n                          <div value={this.state['label']} ></div>\r\n                      </label>\r\n                      <label>\r\n                          <p>Comments :</p>\r\n                          <div value={this.state['description']} ></div>\r\n                      </label>\r\n                      <label>\r\n                          <p>last modified by:</p>\r\n                          <div value={this.state['lastModifiedBy']} ></div>\r\n                      </label>\r\n                      <label>\r\n                          <p>last modified date:</p>\r\n                          <div value={this.state['lastModifiedDate']} ></div>\r\n                      </label>\r\n                  </fieldset>\r\n                </form>\r\n              </div>\r\n                  <div>\r\n            <ul>\r\n            {isDoctor ? \r\n            <div>\r\n             <button onClick={() => this.goPage(\"/SubmitDiagnosis\")}>Submit NEW Diagnosis</button>\r\n             <button onClick={() => this.goPage(`/editDiagnosis/${this.state.id}`)}>edit Diagnosis</button>\r\n             <button onClick={() => this.deleteData()}> Delete</button>\r\n             </div>\r\n            : null}\r\n            \r\n            </ul>\r\n            {/* <Switch>\r\n               \r\n            </Switch> */}\r\n        </div>\r\n                    \r\n        </Router>\r\n   )}\r\n}\r\n\r\n\r\nViewDiagnosisDoc.propTypes = {\r\n  /** An action creator for authenticating login */\r\n  fetchDiagnosis: PropTypes.func.isRequired,\r\n  deleteDiagnosis: PropTypes.func.isRequired\r\n};\r\n\r\n\r\n\r\n\r\nconst dispatchers = {\r\n  fetchDiagnosis,\r\n  deleteDiagnosis\r\n};\r\n\r\nexport default withRouter(connect(() => ({}), dispatchers)(ViewDiagnosisDoc));","C:\\Users\\yerui\\OneDrive\\Documents\\GitHub\\cz3002-fe\\src\\viewDiagnosis\\editDiagnosis.js",["124","125","126","127","128"],"import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { connect } from \"react-redux\";\r\nimport { updateDiagnosis } from \"../redux/ducks/diagnosis\";\r\nimport { Button, CssBaseline, TextField, Container } from \"@material-ui/core\";\r\n//import { Link } from \"react-router-dom\";\r\n//import {createDiagnosis} from \"../redux/ducks/diagnosis\";\r\nimport \"./Diagnosis.css\";\r\nclass editDiagnosis extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      id: this.props.match.params.id,\r\n      //username: null,\r\n      // id : 1,\r\n      createdBy : null,\r\n      createdDate : null,\r\n      lastModifiedBy : null,\r\n      lastModifiedDate : null,\r\n      result : null,\r\n      doctor : null,\r\n      label : null,\r\n      description : null\r\n      \r\n    };\r\n  }\r\n\r\n  validateForm() {\r\n    if (\r\n      this.state.label == null ||\r\n      this.state.description == null \r\n\r\n    )\r\n      return false;\r\n    else\r\n      return (\r\n        this.state.label.length > 0 &&\r\n        this.state.description.length > 0 \r\n    \r\n      );\r\n  }\r\n\r\n  updateData = () => {\r\n    /*delete this.state.user\r\n    var itemdetails = this.state\r\n    var updates = {}\r\n    updates['/items/'] = itemdetails\r\n    //  updated\r\n    this.setState({snackbar: true})\r\n\r\n    return users.database().ref().update(updates)*/\r\n    let doctor = localStorage.getItem(\"doctor\");\r\n    console.log(this.state);\r\n\r\n    this.props.updateDiagnosis(this.state);\r\n      \r\n  }\r\n\r\n  handleInputChange = input => e => {\r\n    this.setState({[input]: e.target.value})\r\n  }\r\n\r\n  render(){\r\n    return(\r\n    <div className=\"wrapper\">\r\n      <h1>Diagnosis</h1>\r\n     \r\n        <fieldset>\r\n           \r\n\r\n            <label>\r\n                <p>Category : </p>\r\n                <select name=\"label\"  onChange={this.handleInputChange(\"label\")}>\r\n                    <option value=\"\">--Please choose an option--</option>\r\n                    <option value=\"moderate\">moderate</option>\r\n                    <option value=\"High\">High</option>\r\n                    <option value=\"Low\">Low</option>\r\n                </select>\r\n            </label>\r\n            <label>\r\n                <p>Comments :</p>\r\n                <textarea name=\"description\"  onChange={this.handleInputChange(\"description\")} />\r\n            </label>\r\n        </fieldset>\r\n       <button disabled={!this.validateForm()} onClick={() => this.updateData()}>Submit</button>\r\n    </div>\r\n  );\r\n}\r\n}\r\neditDiagnosis.propTypes = {\r\n  /** An action creator for authenticating login */\r\n  updateDiagnosis: PropTypes.func.isRequired\r\n};\r\n\r\nconst dispatchers = {\r\n  updateDiagnosis\r\n};\r\n\r\nexport default connect(() => ({}), dispatchers)(editDiagnosis);",{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","replacedBy":"132"},{"ruleId":"133","severity":1,"message":"134","line":2,"column":22,"nodeType":"135","messageId":"136","endLine":2,"endColumn":28},{"ruleId":"133","severity":1,"message":"137","line":7,"column":5,"nodeType":"135","messageId":"136","endLine":7,"endColumn":14},{"ruleId":"133","severity":1,"message":"134","line":2,"column":22,"nodeType":"135","messageId":"136","endLine":2,"endColumn":28},{"ruleId":"133","severity":1,"message":"137","line":7,"column":5,"nodeType":"135","messageId":"136","endLine":7,"endColumn":14},{"ruleId":"138","severity":1,"message":"139","line":10,"column":1,"nodeType":"140","endLine":35,"endColumn":2},{"ruleId":"133","severity":1,"message":"141","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":16},{"ruleId":"133","severity":1,"message":"142","line":5,"column":18,"nodeType":"135","messageId":"136","endLine":5,"endColumn":29},{"ruleId":"133","severity":1,"message":"143","line":5,"column":31,"nodeType":"135","messageId":"136","endLine":5,"endColumn":40},{"ruleId":"133","severity":1,"message":"144","line":5,"column":42,"nodeType":"135","messageId":"136","endLine":5,"endColumn":51},{"ruleId":"138","severity":1,"message":"139","line":25,"column":1,"nodeType":"140","endLine":92,"endColumn":2},{"ruleId":"129","replacedBy":"145"},{"ruleId":"131","replacedBy":"146"},{"ruleId":"133","severity":1,"message":"147","line":3,"column":5,"nodeType":"135","messageId":"136","endLine":3,"endColumn":11},{"ruleId":"133","severity":1,"message":"148","line":4,"column":5,"nodeType":"135","messageId":"136","endLine":4,"endColumn":10},{"ruleId":"133","severity":1,"message":"149","line":5,"column":5,"nodeType":"135","messageId":"136","endLine":5,"endColumn":9},{"ruleId":"133","severity":1,"message":"150","line":6,"column":5,"nodeType":"135","messageId":"136","endLine":6,"endColumn":18},{"ruleId":"133","severity":1,"message":"137","line":7,"column":5,"nodeType":"135","messageId":"136","endLine":7,"endColumn":14},{"ruleId":"133","severity":1,"message":"141","line":10,"column":8,"nodeType":"135","messageId":"136","endLine":10,"endColumn":14},{"ruleId":"133","severity":1,"message":"151","line":11,"column":18,"nodeType":"135","messageId":"136","endLine":11,"endColumn":28},{"ruleId":"133","severity":1,"message":"141","line":5,"column":10,"nodeType":"135","messageId":"136","endLine":5,"endColumn":16},{"ruleId":"133","severity":1,"message":"142","line":5,"column":18,"nodeType":"135","messageId":"136","endLine":5,"endColumn":29},{"ruleId":"133","severity":1,"message":"143","line":5,"column":31,"nodeType":"135","messageId":"136","endLine":5,"endColumn":40},{"ruleId":"133","severity":1,"message":"144","line":5,"column":42,"nodeType":"135","messageId":"136","endLine":5,"endColumn":51},{"ruleId":"133","severity":1,"message":"152","line":53,"column":9,"nodeType":"135","messageId":"136","endLine":53,"endColumn":15},"no-native-reassign",["153"],"no-negated-in-lhs",["154"],"no-unused-vars","'Router' is defined but never used.","Identifier","unusedVar","'useParams' is defined but never used.","import/no-anonymous-default-export","Unexpected default export of anonymous function","ExportDefaultDeclaration","'Button' is defined but never used.","'CssBaseline' is defined but never used.","'TextField' is defined but never used.","'Container' is defined but never used.",["153"],["154"],"'Switch' is defined but never used.","'Route' is defined but never used.","'Link' is defined but never used.","'useRouteMatch' is defined but never used.","'RouterLink' is defined but never used.","'doctor' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]